From 69921d4870de08b232b2856d20804e2fecf09237 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Thu, 14 May 2015 13:13:13 +0300
Subject: [PATCH 223/752] dpaa2-eth: Fix Rx buffer address alignment

We need to align the start address of the Rx buffers to
LDPAA_ETH_BUF_ALIGN bytes. We were using SMP_CACHE_BYTES instead.
It happened to work because both defines have the value of 64,
but this may change at some point.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Reviewed-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Change-Id: I08a0f3f18f82c5581c491bd395e3ad066b25bcf5
Reviewed-on: http://git.am.freescale.net:8181/37669
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
Reviewed-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c | 6 ++----
 drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h | 7 ++++++-
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
index 9c363aa..fe7ae5a 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.c
@@ -1276,14 +1276,12 @@ static int ldpaa_bp_add_7(struct ldpaa_eth_priv *priv, uint16_t bpid)
 		/* Allocate buffer visible to WRIOP + skb shared info +
 		 * alignment padding
 		 */
-		buf = netdev_alloc_frag(LDPAA_ETH_RX_BUFFER_SIZE +
-					sizeof(struct skb_shared_info) +
-					2 * SMP_CACHE_BYTES);
+		buf = netdev_alloc_frag(LDPAA_ETH_BUF_RAW_SIZE);
 		if (unlikely(!buf)) {
 			dev_err(dev, "buffer allocation failed\n");
 			goto err_alloc;
 		}
-		buf = PTR_ALIGN(buf, SMP_CACHE_BYTES);
+		buf = PTR_ALIGN(buf, LDPAA_ETH_BUF_ALIGN);
 
 		addr = dma_map_single(dev, buf, LDPAA_ETH_RX_BUFFER_SIZE,
 				      DMA_FROM_DEVICE);
diff --git a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
index 2fffea6..6bd0084 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/ldpaa_eth.h
@@ -56,7 +56,6 @@
  */
 #define LDPAA_ETH_NUM_BUFS		(300 * 7)
 #define LDPAA_ETH_REFILL_THRESH		(LDPAA_ETH_NUM_BUFS * 5 / 6)
-#define LDPAA_ETH_RX_BUFFER_SIZE	2048
 
 /* Maximum receive frame size is 64K */
 #define LDPAA_ETH_MAX_SG_ENTRIES	((64 * 1024) / LDPAA_ETH_RX_BUFFER_SIZE)
@@ -71,10 +70,16 @@
 /* Hardware requires alignment for ingress/egress buffer addresses
  * and ingress buffer lengths.
  */
+#define LDPAA_ETH_RX_BUFFER_SIZE	2048
 #define LDPAA_ETH_BUF_ALIGN		64
 #define LDPAA_ETH_NEEDED_HEADROOM(p_priv) \
 	((p_priv)->tx_data_offset + LDPAA_ETH_BUF_ALIGN)
 
+#define LDPAA_ETH_BUF_RAW_SIZE \
+	(LDPAA_ETH_RX_BUFFER_SIZE + \
+	SKB_DATA_ALIGN(sizeof(struct skb_shared_info)) + \
+	LDPAA_ETH_BUF_ALIGN)
+
 /* So far we're only accomodating a skb backpointer in the frame's
  * software annotation, but the hardware options are either 0 or 64.
  */
-- 
2.9.3

