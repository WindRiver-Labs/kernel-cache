From 6d6361f40324a75f793db562b1596bb1abf59126 Mon Sep 17 00:00:00 2001
From: Jingchang Lu <jingchang.lu@freescale.com>
Date: Thu, 12 Jun 2014 15:36:36 +0800
Subject: [PATCH 779/780] gianfar: Add dma transfer endian property support

Signed-off-by: Jason Jin <Jason.Jin@freescale.com>
Signed-off-by: Jingchang Lu <jingchang.lu@freescale.com>
Change-Id: I3958f741a54691a882323a95b56bc7d8cb1311c4
Reviewed-on: http://git.am.freescale.net:8181/21179
Reviewed-by: Sandeep Malik <Sandeep.Malik@freescale.com>
Tested-by: Review Code-CDREVIEW <CDREVIEW@freescale.com>
[Xulin: Original patch taken from
Freescale-Linux-SDK-for-LS1021A-IOT-Rev2-v0.4-SOURCE-20150907-yocto.iso]
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/arm/boot/dts/ls1021a-iot.dts        | 5 +++--
 drivers/net/ethernet/freescale/gianfar.c | 4 ++++
 drivers/net/ethernet/freescale/gianfar.h | 4 ++++
 3 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/ls1021a-iot.dts b/arch/arm/boot/dts/ls1021a-iot.dts
index e443136..debd6f5 100644
--- a/arch/arm/boot/dts/ls1021a-iot.dts
+++ b/arch/arm/boot/dts/ls1021a-iot.dts
@@ -109,6 +109,7 @@
 	tbi-handle = <&tbi1>;
 	phy-handle = <&phy1>;
 	phy-connection-type = "sgmii";
+	fsl,dma-endian-le;
 	status = "ok";
 };
 
@@ -116,6 +117,7 @@
 	tbi-handle = <&tbi1>;
 	phy-handle = <&phy3>;
 	phy-connection-type = "sgmii";
+	fsl,dma-endian-le;
 	status = "ok";
 };
 
@@ -123,6 +125,7 @@
 	tbi-handle = <&tbi1>;
 	fixed-link = <2 1 1000 0 0>;
 	phy-connection-type = "rgmii";
+	fsl,dma-endian-le;
 	status = "ok";
 };
 
@@ -200,11 +203,9 @@
 	};
 	phy1: ethernet-phy@1 {
 		reg = <0x1>;
-		interrupts = <GIC_SPI 165 IRQ_TYPE_LEVEL_LOW>;
 	};
 	phy3: ethernet-phy@3 {
 		reg = <0x3>;
-		interrupts = <GIC_SPI 165 IRQ_TYPE_LEVEL_LOW>;
 	};
 	tbi1: tbi-phy@1f {
 		reg = <0x1f>;
diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 9278a08..2ad7ab9 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -924,6 +924,8 @@ static int gfar_of_init(struct platform_device *ofdev, struct net_device **pdev)
 	/* Find the TBI PHY.  If it's not there, we don't support SGMII */
 	priv->tbi_node = of_parse_phandle(np, "tbi-handle", 0);
 
+	priv->dma_endian_le = of_property_read_bool(np, "fsl,dma-endian-le");
+
 	return 0;
 
 err_grp_init:
@@ -2051,6 +2053,8 @@ void gfar_start(struct gfar_private *priv)
 	/* Initialize DMACTRL to have WWR and WOP */
 	tempval = gfar_read(&regs->dmactrl);
 	tempval |= DMACTRL_INIT_SETTINGS;
+	if (priv->dma_endian_le)
+		tempval |= DMACTRL_LE;
 	gfar_write(&regs->dmactrl, tempval);
 
 	/* Make sure we aren't stopped */
diff --git a/drivers/net/ethernet/freescale/gianfar.h b/drivers/net/ethernet/freescale/gianfar.h
index 6e8a9c8..8d20691 100644
--- a/drivers/net/ethernet/freescale/gianfar.h
+++ b/drivers/net/ethernet/freescale/gianfar.h
@@ -239,6 +239,7 @@ extern const char gfar_driver_version[];
 #define DMACTRL_INIT_SETTINGS   0x000000c3
 #define DMACTRL_GRS             0x00000010
 #define DMACTRL_GTS             0x00000008
+#define DMACTRL_LE		0x00008000
 
 #define TSTAT_CLEAR_THALT_ALL	0xFF000000
 #define TSTAT_CLEAR_THALT	0x80000000
@@ -1175,6 +1176,9 @@ struct gfar_private {
 		tx_pause_en:1,
 		rx_pause_en:1;
 
+	/* little endian dma buffer and descriptor host interface */
+	unsigned int dma_endian_le;
+
 	/* The total tx and rx ring size for the enabled queues */
 	unsigned int total_tx_ring_size;
 	unsigned int total_rx_ring_size;
-- 
2.0.2

