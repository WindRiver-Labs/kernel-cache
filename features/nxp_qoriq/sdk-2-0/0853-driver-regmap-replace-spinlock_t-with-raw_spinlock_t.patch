From c9a36d173f83d628cd4df2dddf6348e84780605c Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Fri, 18 Nov 2016 04:00:56 -0500
Subject: [PATCH] driver: regmap: replace spinlock_t with raw_spinlock_t

This is to fix below issue:
BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:931
in_atomic(): 1, irqs_disabled(): 128, pid: 898, name: ifconfig
Preemption disabled at:[< (null)>] (null)

CPU: 0 PID: 898 Comm: ifconfig Not tainted 4.8.8-rt5-WR9.0.0.0_preempt-rt #1
Hardware name: Freescale LS1021A
[<80212924>] (unwind_backtrace) from [<8020ca70>] (show_stack+0x20/0x24)
[<8020ca70>] (show_stack) from [<80639da4>] (dump_stack+0x80/0x94)
[<80639da4>] (dump_stack) from [<8024cd18>] (___might_sleep+0x140/0x1b8)
[<8024cd18>] (___might_sleep) from [<80aa11b8>] (rt_spin_lock+0x2c/0x7c)
[<80aa11b8>] (rt_spin_lock) from [<80717b74>] (regmap_lock_spinlock+0x1c/0x28)
[<80717b74>] (regmap_lock_spinlock) from [<8071b134>] (regmap_read+0x3c/0x6c)
[<8071b134>] (regmap_read) from [<8069e248>] (ls1021_pcie_link_up+0x40/0x5c)
[<8069e248>] (ls1021_pcie_link_up) from [<8069cfd0>] (dw_pcie_link_up+0x28/0x40)
[<8069cfd0>] (dw_pcie_link_up) from [<8069d09c>] (dw_pcie_valid_config+0x34/0x8c)
[<8069d09c>] (dw_pcie_valid_config) from [<8069d2ac>] (dw_pcie_rd_conf+0x40/0x184)
[<8069d2ac>] (dw_pcie_rd_conf) from [<8067c420>] (pci_bus_read_config_word+0x7c/0xa4)
[<8067c420>] (pci_bus_read_config_word) from [<8067dbe0>] (pcie_capability_read_word+0x5c/0x98)
[<8067dbe0>] (pcie_capability_read_word) from [<7f10afdc>] (iwl_pcie_apm_init+0xd4/0x2dc [iwlwifi])
[<7f10afdc>] (iwl_pcie_apm_init [iwlwifi]) from [<7f10eab0>] (iwl_trans_pcie_start_hw+0x6c/0x2b4 [iwlwifi])
[<7f10eab0>] (iwl_trans_pcie_start_hw [iwlwifi]) from [<7f2002fc>] (iwl_mvm_up+0x30/0x67c [iwlmvm])
[<7f2002fc>] (iwl_mvm_up [iwlmvm]) from [<7f206818>] (__iwl_mvm_mac_start+0x198/0x2e0 [iwlmvm])
[<7f206818>] (__iwl_mvm_mac_start [iwlmvm]) from [<7f2069a0>] (iwl_mvm_mac_start+0x40/0x108 [iwlmvm])
[<7f2069a0>] (iwl_mvm_mac_start [iwlmvm]) from [<7f146b18>] (drv_start+0x68/0x214 [mac80211])
[<7f146b18>] (drv_start [mac80211]) from [<7f15e81c>] (ieee80211_do_open+0x2ec/0x898 [mac80211])
[<7f15e81c>] (ieee80211_do_open [mac80211]) from [<7f15ee28>] (ieee80211_open+0x60/0x64 [mac80211])
[<7f15ee28>] (ieee80211_open [mac80211]) from [<809238f0>] (__dev_open+0xcc/0x148)
[<809238f0>] (__dev_open) from [<80923bec>] (__dev_change_flags+0xa4/0x154)
[<80923bec>] (__dev_change_flags) from [<80923cc4>] (dev_change_flags+0x28/0x58)
[<80923cc4>] (dev_change_flags) from [<8099c168>] (devinet_ioctl+0x68c/0x750)
[<8099c168>] (devinet_ioctl) from [<8099e548>] (inet_ioctl+0x1a4/0x1d0)
[<8099e548>] (inet_ioctl) from [<80900070>] (sock_ioctl+0x158/0x2c0)
[<80900070>] (sock_ioctl) from [<8038605c>] (do_vfs_ioctl+0xb0/0x850)
[<8038605c>] (do_vfs_ioctl) from [<80386878>] (SyS_ioctl+0x7c/0x8c)
[<80386878>] (SyS_ioctl) from [<80207ec0>] (ret_fast_syscall+0x0/0x3c)

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/base/regmap/internal.h | 2 +-
 drivers/base/regmap/regmap.c   | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/base/regmap/internal.h b/drivers/base/regmap/internal.h
index a038033..6a4bb32 100644
--- a/drivers/base/regmap/internal.h
+++ b/drivers/base/regmap/internal.h
@@ -53,7 +53,7 @@ struct regmap {
 	union {
 		struct mutex mutex;
 		struct {
-			spinlock_t spinlock;
+			raw_spinlock_t spinlock;
 			unsigned long spinlock_flags;
 		};
 	};
diff --git a/drivers/base/regmap/regmap.c b/drivers/base/regmap/regmap.c
index e964d06..e849031 100644
--- a/drivers/base/regmap/regmap.c
+++ b/drivers/base/regmap/regmap.c
@@ -408,7 +408,7 @@ __acquires(&map->spinlock)
 	struct regmap *map = __map;
 	unsigned long flags;
 
-	spin_lock_irqsave(&map->spinlock, flags);
+	raw_spin_lock_irqsave(&map->spinlock, flags);
 	map->spinlock_flags = flags;
 }
 
@@ -416,7 +416,7 @@ static void regmap_unlock_spinlock(void *__map)
 __releases(&map->spinlock)
 {
 	struct regmap *map = __map;
-	spin_unlock_irqrestore(&map->spinlock, map->spinlock_flags);
+	raw_spin_unlock_irqrestore(&map->spinlock, map->spinlock_flags);
 }
 
 static void dev_get_regmap_release(struct device *dev, void *res)
@@ -607,7 +607,7 @@ struct regmap *__regmap_init(struct device *dev,
 	} else {
 		if ((bus && bus->fast_io) ||
 		    config->fast_io) {
-			spin_lock_init(&map->spinlock);
+			raw_spin_lock_init(&map->spinlock);
 			map->lock = regmap_lock_spinlock;
 			map->unlock = regmap_unlock_spinlock;
 			lockdep_set_class_and_name(&map->spinlock,
-- 
2.0.2

