From 3845f5e662d78abf1efeb4b9f8527dccf3a670d6 Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Fri, 14 Nov 2014 10:46:18 +0800
Subject: [PATCH 835/838] edac: mpc85xx: don't do the ecc scrubbing for the
 reserved memory

On the mpc85xx platform, we use lwarx/stwcx pair to do a atomic
scrubbing when detecting a single bit ecc error. This method works
fine for normal memory. But for some reserved memories such as the
dedicated private memories for QMAN or BMAN, the cache coherence is
disabled for performance. If a single bit ecc error occurs in these
memory areas, the atomic scrubbing may conflict with the QMAN/BMAN
dma store access and then crash the data there.

In order to fix this issue, we choose to skip all the ecc scrubbing
for the reserved memories. We implement this by using the
ctl_page_to_phys callback of mem_ctl_info struct. If an ecc error
occurs in a reserved memory, we would return a invalid physical
address. This will cause the edac core to skip the ecc scrubbing.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/edac/mpc85xx_edac.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/edac/mpc85xx_edac.c b/drivers/edac/mpc85xx_edac.c
index a3cc9c4..d0b2426 100644
--- a/drivers/edac/mpc85xx_edac.c
+++ b/drivers/edac/mpc85xx_edac.c
@@ -24,6 +24,7 @@
 
 #include <linux/of_platform.h>
 #include <linux/of_device.h>
+#include <linux/memblock.h>
 #include "edac_module.h"
 #include "edac_core.h"
 #include "mpc85xx_edac.h"
@@ -1032,6 +1033,15 @@ static void mpc85xx_init_csrows(struct mem_ctl_info *mci)
 	}
 }
 
+static unsigned long mpc85xx_ctl_page_to_phys(struct mem_ctl_info *mci,
+					      unsigned long page)
+{
+	if (memblock_is_reserved(page << PAGE_SHIFT))
+		return -1UL;
+
+	return page;
+}
+
 static int mpc85xx_mc_err_probe(struct platform_device *op)
 {
 	struct mem_ctl_info *mci;
@@ -1107,7 +1117,7 @@ static int mpc85xx_mc_err_probe(struct platform_device *op)
 	if (edac_op_state == EDAC_OPSTATE_POLL)
 		mci->edac_check = mpc85xx_mc_check;
 
-	mci->ctl_page_to_phys = NULL;
+	mci->ctl_page_to_phys = mpc85xx_ctl_page_to_phys;
 
 	mci->scrub_mode = SCRUB_SW_SRC;
 
-- 
2.0.2

