From 22bbe041dc71a0f004ccc62a92e1dac583f1f370 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Sun, 9 Oct 2016 15:08:53 +0800
Subject: [PATCH 753/756] can: flexcan: add missing renamed feature into quirks

Reference the commit f377bff02357(can: flexcan: rename feature into quirks).
The "feature" of struct flexcan_devtype_data has been renamed
to "quirks", here add the missed ones.

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 drivers/net/can/flexcan.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index 253f2da..72a43ab 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -290,7 +290,7 @@ static struct flexcan_devtype_data fsl_vf610_devtype_data = {
  * work here.
  */
 static struct flexcan_devtype_data fsl_ls1021a_devtype_data = {
-	.features = FLEXCAN_HAS_V10_FEATURES | FLEXCAN_HAS_MECR_FEATURES |
+	.quirks = FLEXCAN_QUIRK_DISABLE_RXFG | FLEXCAN_QUIRK_DISABLE_MECR |
 		    FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT,
 };
 
@@ -298,7 +298,7 @@ static struct flexcan_devtype_data fsl_ls1021a_devtype_data = {
  * the legacy mode.
  */
 static struct flexcan_devtype_data fsl_ls1021a_r2_devtype_data = {
-	.features = FLEXCAN_HAS_V10_FEATURES | FLEXCAN_HAS_MECR_FEATURES,
+	.quirks = FLEXCAN_QUIRK_DISABLE_RXFG | FLEXCAN_QUIRK_DISABLE_MECR,
 };
 
 static const struct can_bittiming_const flexcan_bittiming_const = {
@@ -718,7 +718,7 @@ static int priv->read_frame(struct net_device *dev)
 		return 0;
 	}
 
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
 		flexcan_read_msg_buf(dev, cf, priv->rx_msg_buf);
 	else
 		flexcan_read_fifo(dev, cf);
@@ -751,7 +751,7 @@ static int flexcan_poll(struct napi_struct *napi, int quota)
 
 	reg_iflag1 = priv->read(&regs->iflag1);
 
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
 		/* handle legacy RX mode */
 		iflag1 = reg_iflag1 & FLEXCAN_IFLAG_RX_MB_RXMASK;
 		while ((reg_iflag1 & FLEXCAN_IFLAG_RX_MB_RXMASK) &&
@@ -777,7 +777,7 @@ static int flexcan_poll(struct napi_struct *napi, int quota)
 	if (work_done < quota) {
 		napi_complete(napi);
 		/* enable IRQs */
-		if (priv->devtype_data->features &
+		if (priv->devtype_data->quirks &
 		    FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
 			priv->write(FLEXCAN_IFLAG_DEFAULT_RX_MB_MODE |
 				    FLEXCAN_IFLAG_RX_MB_RXMASK, &regs->imask1);
@@ -810,7 +810,7 @@ static irqreturn_t flexcan_irq(int irq, void *dev_id)
 	 * - state change IRQ
 	 * - bus error IRQ and bus error reporting is activated
 	 */
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
 		if ((reg_iflag1 & FLEXCAN_IFLAG_RX_MB_RXMASK) ||
 		    (reg_esr & FLEXCAN_ESR_ERR_STATE) ||
 		    flexcan_has_and_handle_berr(priv, reg_esr)) {
@@ -941,7 +941,7 @@ static int flexcan_chip_start(struct net_device *dev)
 	 */
 	reg_mcr = priv->read(&regs->mcr);
 	reg_mcr &= ~FLEXCAN_MCR_MAXMB(0xff);
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
 		reg_mcr &= ~FLEXCAN_MCR_FEN;
 	else
 		reg_mcr |= FLEXCAN_MCR_FEN;
@@ -1044,7 +1044,7 @@ static int flexcan_chip_start(struct net_device *dev)
 	/* enable interrupts atomically */
 	disable_irq(dev->irq);
 	priv->write(priv->reg_ctrl_default, &regs->ctrl);
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
 		/* enable mb interrupts */
 		priv->write(FLEXCAN_IFLAG_DEFAULT_RX_MB_MODE |
 			    FLEXCAN_IFLAG_RX_MB_RXMASK, &regs->imask1);
@@ -1209,7 +1209,7 @@ static int register_flexcandev(struct net_device *dev)
 	 * register access
 	 */
 	reg = priv->read(&regs->mcr);
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT)
 		reg &= ~FLEXCAN_MCR_FEN;
 	else
 		reg |= FLEXCAN_MCR_FEN;
@@ -1217,7 +1217,7 @@ static int register_flexcandev(struct net_device *dev)
 	reg |= FLEXCAN_MCR_FRZ | FLEXCAN_MCR_HALT | FLEXCAN_MCR_SUPV;
 	priv->write(reg, &regs->mcr);
 
-	if (priv->devtype_data->features & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
+	if (priv->devtype_data->quirks & FLEXCAN_HAS_ONLY_LEGACY_RX_SUPPORT) {
 		/* Legacy RX mode*/
 		netdev_info(dev, "Legacy mode (non RX-FIFO) enabled\n");
 	} else {
-- 
2.0.2

