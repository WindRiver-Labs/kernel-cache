From 492d03c311e1444010e513e57d0e28f5d2a0c56e Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Wed, 6 Mar 2013 13:25:00 +0800
Subject: [PATCH 820/838] qman: drain the dqrr entries in kexec boot

There may be some unprocessed dqrr entries in the qman portal when
kexec boot. So introduce a function to drain these stale entries.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
Signed-off-by: Bin Jiang <bin.jiang@windriver.com>
Signed-off-by: Zhenbo Gao <zhenbo.gao@windriver.com>
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_high.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/staging/fsl_qbman/qman_high.c b/drivers/staging/fsl_qbman/qman_high.c
index 431a157..d604f79 100644
--- a/drivers/staging/fsl_qbman/qman_high.c
+++ b/drivers/staging/fsl_qbman/qman_high.c
@@ -528,6 +528,25 @@ struct dev_pm_domain qman_portal_device_pm_domain = {
 	}
 };
 
+#if defined(CONFIG_KEXEC) || defined(CONFIG_CRASH_DUMP)
+static int qm_drain_dqrr(struct qm_portal *p)
+{
+	const struct qm_dqrr_entry *dq;
+	while (1) {
+		qm_dqrr_pvb_update(p);
+		dq = qm_dqrr_current(p);
+		if (!dq)
+			break;
+		qm_dqrr_cdc_consume_1ptr(p, dq, 0);
+		qm_dqrr_next(p);
+	}
+	qm_isr_status_clear(p, 0xffffffff);
+	return 0;
+}
+#else
+static inline int qm_drain_dqrr(struct qm_portal *p) { return 1; }
+#endif
+
 struct qman_portal *qman_create_portal(
 			struct qman_portal *portal,
 			const struct qm_portal_config *config,
-- 
2.0.2

