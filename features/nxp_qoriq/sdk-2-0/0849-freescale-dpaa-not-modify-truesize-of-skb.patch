From 6b6de2eb8609bc1bb82363e84e9044a4d7be0b43 Mon Sep 17 00:00:00 2001
From: Li Wang <li.wang@windriver.com>
Date: Tue, 25 Oct 2016 13:29:32 +0800
Subject: [PATCH 849/849] freescale dpaa: not modify truesize of skb

truesize is onily one parameter for skb, it must be related with
the other parameters, such as tail. if only modify it, it causes
that len of skb is bigger than truesize, and prink warning info:
 WARNING: at net/core/skbuff.c:4158
 NIP [c000000000a19094] .skb_try_coalesce+0x414/0x460
 LR [c000000000aa1fd4] .tcp_try_coalesce+0x94/0x150
 Call Trace:
 [c0000002fef77140] [c0000002fef771f0] 0xc0000002fef771f0 (unreliable)
 [c0000002fef771f0] [c000000000aa1fd4] .tcp_try_coalesce+0x94/0x150
 [c0000002fef77290] [c000000000aa3bd4] .tcp_data_queue+0x444/0x1060
 [c0000002fef77370] [c000000000aa699c] .tcp_rcv_established+0x24c/0x890
 [c0000002fef77430] [c000000000ab1f54] .tcp_v4_do_rcv+0x254/0x530
 [c0000002fef774e0] [c000000000ab52c8] .tcp_v4_rcv+0xa68/0xa90
 [c0000002fef775d0] [c000000000a84d4c] .ip_local_deliver_finish+0x14c/0x360
 [c0000002fef77670] [c000000000a85630] .ip_local_deliver+0xf0/0x110
 [c0000002fef77720] [c000000000a84ff4] .ip_rcv_finish+0x94/0x420
 [c0000002fef777b0] [c000000000a859d8] .ip_rcv+0x388/0x4d0
 [c0000002fef77880] [c000000000a2d804] .__netif_receive_skb_core+0x9a4/0xd50
 [c0000002fef77980] [c000000000a3160c] .netif_receive_skb_internal+0x4c/0x110
 [c0000002fef77a20] [c0000000008ee6e0] ._dpa_rx+0x1d0/0x710

now, we are simple to reserve the original skb struct from hardware,
and not to handle it.

Signed-off-by: Li Wang <li.wang@windriver.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
index 4534661..ba25224 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -388,16 +388,6 @@ static struct sk_buff *__hot contig_fd_to_skb(const struct dpa_priv_s *priv,
 	 */
 	DPA_READ_SKB_PTR(skb, skbh, vaddr, -1);
 
-#ifdef CONFIG_FSL_DPAA_ETH_JUMBO_FRAME
-	/* When using jumbo Rx buffers, we risk having frames dropped due to
-	 * the socket backlog reaching its maximum allowed size.
-	 * Use the frame length for the skb truesize instead of the buffer
-	 * size, as this is the size of the data that actually gets copied to
-	 * userspace.
-	 */
-	skb->truesize = SKB_TRUESIZE(dpa_fd_length(fd));
-#endif
-
 	DPA_BUG_ON(fd_off != priv->rx_headroom);
 	skb_reserve(skb, fd_off);
 	skb_put(skb, dpa_fd_length(fd));
-- 
2.0.2

