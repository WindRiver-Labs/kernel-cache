From fe95efdd96241f3b04b491d72f20a166628c9632 Mon Sep 17 00:00:00 2001
From: Alex Porosanu <alexandru.porosanu@nxp.com>
Date: Fri, 6 May 2016 12:33:17 +0300
Subject: [PATCH 747/752] dpaa_eth: fail gracefully if RX PCD HiPrio FQs cannot
 be initialized

If the RX PCD High Priority FQs cannot be initialized
(f.i. the corresponding FQs are not available for QMan), then print
a message and remove the corresponding dpa_fq in the interface's list
of queues.

Signed-off-by: Alex Porosanu <alexandru.porosanu@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../ethernet/freescale/sdk_dpaa/dpaa_eth_common.c  | 23 ++++++++++++++++++----
 .../ethernet/freescale/sdk_dpaa/dpaa_eth_common.h  |  3 +++
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
index a9bc02a..cd558d5 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.c
@@ -1417,9 +1417,13 @@ int dpa_fq_init(struct dpa_fq *dpa_fq, bool td_enable)
 
 		_errno = qman_init_fq(fq, QMAN_INITFQ_FLAG_SCHED, &initfq);
 		if (_errno < 0) {
-			dev_err(dev, "qman_init_fq(%u) = %d\n",
+			if (DPA_RX_PCD_HI_PRIO_FQ_INIT_FAIL(dpa_fq, _errno)) {
+				dpa_fq->init = 0;
+			} else {
+				dev_err(dev, "qman_init_fq(%u) = %d\n",
 					qman_fq_fqid(fq), _errno);
-			qman_destroy_fq(fq, 0);
+				qman_destroy_fq(fq, 0);
+			}
 			return _errno;
 		}
 	}
@@ -1485,13 +1489,24 @@ int dpa_fqs_init(struct device *dev, struct list_head *list, bool td_enable)
 {
 	int  _errno, __errno;
 	struct dpa_fq	*dpa_fq, *tmp;
+	static bool print_msg __read_mostly;
 
 	_errno = 0;
+	print_msg = true;
 	list_for_each_entry_safe(dpa_fq, tmp, list, list) {
 		__errno = dpa_fq_init(dpa_fq, td_enable);
 		if (unlikely(__errno < 0) && _errno >= 0) {
-			_errno = __errno;
-			break;
+			if (DPA_RX_PCD_HI_PRIO_FQ_INIT_FAIL(dpa_fq, __errno)) {
+				if (print_msg) {
+					dev_warn(dev,
+						 "Skip RX PCD High Priority FQs initialization\n");
+					print_msg = false;
+				}
+				_dpa_fq_free(dev, (struct qman_fq *)dpa_fq);
+			} else {
+				_errno = __errno;
+				break;
+			}
 		}
 	}
 
diff --git a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.h b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.h
index 3cf6ce3..d27b58e 100644
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.h
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_common.h
@@ -67,6 +67,9 @@
 
 #define DPA_BUFF_RELEASE_MAX 8 /* maximum number of buffers released at once */
 
+#define DPA_RX_PCD_HI_PRIO_FQ_INIT_FAIL(dpa_fq, _errno) \
+	(((dpa_fq)->fq_type == FQ_TYPE_RX_PCD_HI_PRIO) && \
+	  (_errno == -EIO))
 /* return codes for the dpaa-eth hooks */
 enum dpaa_eth_hook_result {
 	/* fd/skb was retained by the hook.
-- 
2.9.3

