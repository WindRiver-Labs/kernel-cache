From 79a5be7b369097ff1e135aaf4f25f4a7ecc0d536 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Tue, 6 Oct 2015 13:01:03 +0300
Subject: [PATCH 323/752] fsl-dpaa2: eth: Remove FIXME/TODO comments from the
 code

Some of the concerns had already been addressed, a couple are being
fixed in place.
Left a few TODOs related to the flow-steering code, which needs to be
revisited before upstreaming anyway.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h |  2 --
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c       | 18 +++++-------------
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h       | 18 ++----------------
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-ethtool.c   |  2 +-
 4 files changed, 8 insertions(+), 32 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
index 3d8b1ba..3b040e8 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
@@ -82,7 +82,6 @@ DECLARE_EVENT_CLASS(dpaa2_eth_fd,
 		    /* This is what gets printed when the trace event is
 		     * triggered.
 		     */
-		    /* TODO: print the status using __print_flags() */
 		    TP_printk(TR_FMT,
 			      __get_str(name),
 			      __entry->fd_addr,
@@ -163,7 +162,6 @@ TRACE_EVENT(dpaa2_eth_buf_seed,
 	    /* This is what gets printed when the trace event is
 	     * triggered.
 	     */
-	    /* TODO: print the status using __print_flags() */
 	    TP_printk(TR_BUF_FMT,
 		      __get_str(name),
 		      __entry->vaddr,
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 0660215..378220d 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -380,7 +380,6 @@ static int dpaa2_eth_store_consume(struct dpaa2_eth_channel *ch)
 				 */
 				continue;
 			}
-			/* TODO add a ethtool counter for empty dequeues */
 			break;
 		}
 
@@ -415,8 +414,7 @@ static int dpaa2_eth_build_sg_fd(struct dpaa2_eth_priv *priv,
 	/* Create and map scatterlist.
 	 * We don't advertise NETIF_F_FRAGLIST, so skb_to_sgvec() will not have
 	 * to go beyond nr_frags+1.
-	 * TODO We don't support chained scatterlists; we could just fallback
-	 * to the old implementation.
+	 * Note: We don't support chained scatterlists
 	 */
 	WARN_ON(PAGE_SIZE / sizeof(struct scatterlist) < nr_frags + 1);
 	scl = kcalloc(nr_frags + 1, sizeof(struct scatterlist), GFP_ATOMIC);
@@ -895,7 +893,7 @@ static int dpaa2_link_state_update(struct dpaa2_eth_priv *priv)
 		return err;
 	}
 
-	/* TODO: Speed / duplex changes are not treated yet */
+	/* Chech link state; speed / duplex changes are not treated yet */
 	if (priv->link_state.up == state.up)
 		return 0;
 
@@ -974,7 +972,6 @@ static int dpaa2_eth_stop(struct net_device *net_dev)
 	netif_carrier_off(net_dev);
 	dpni_disable(priv->mc_io, 0, priv->mc_token);
 
-	/* TODO: Make sure queues are drained before if down is complete! */
 	msleep(500);
 
 	dpaa2_eth_napi_disable(priv);
@@ -1329,9 +1326,7 @@ static void dpaa2_eth_setup_fqs(struct dpaa2_eth_priv *priv)
 
 	/* The number of Rx queues (Rx distribution width) may be different from
 	 * the number of cores.
-	 *
-	 * TODO: We still only have one traffic class for now,
-	 * but for multiple TCs may need an array of dist sizes.
+	 * We only support one traffic class for now.
 	 */
 	for (i = 0; i < dpaa2_queue_count(priv); i++) {
 		priv->fq[priv->num_fqs].netdev_priv = priv;
@@ -1876,7 +1871,6 @@ static int dpaa2_dpni_setup(struct fsl_mc_device *ls_dev)
 		goto err_open;
 	}
 
-	/* FIXME Alex's moral compass says this must be done */
 	ls_dev->mc_io = priv->mc_io;
 	ls_dev->mc_handle = priv->mc_token;
 
@@ -2329,10 +2323,9 @@ static irqreturn_t dpni_irq0_handler_thread(int irq_num, void *arg)
 	int err;
 
 	netdev_dbg(net_dev, "IRQ %d received\n", irq_num);
-	/* Sanity check; TODO a bit of cleanup here */
-	if (WARN_ON(!dpni_dev || !dpni_dev->irqs || !dpni_dev->irqs[irq_index]))
+	if (!dpni_dev || !dpni_dev->irqs || !dpni_dev->irqs[irq_index])
 		goto out;
-	if (WARN_ON(dpni_dev->irqs[irq_index]->irq_number != irq_num))
+	if (dpni_dev->irqs[irq_index]->irq_number != irq_num)
 		goto out;
 
 	err = dpni_get_irq_status(dpni_dev->mc_io, 0, dpni_dev->mc_handle,
@@ -2496,7 +2489,6 @@ static ssize_t dpaa2_eth_write_txconf_cpumask(struct device *dev,
 	}
 
 	/* Rewiring the TxConf FQs requires interface shutdown.
-	 * FIXME hold device lock
 	 */
 	if (running) {
 		err = dpaa2_eth_stop(priv->net_dev);
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
index 7c122ee..4ccfbf2 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.h
@@ -47,8 +47,7 @@
 #include "dpaa2-eth-trace.h"
 #include "dpaa2-eth-debugfs.h"
 
-/* TODO : how many queues here? NR_CPUS? */
-#define DPAA2_ETH_TX_QUEUES		8	/* FIXME */
+#define DPAA2_ETH_TX_QUEUES		8
 #define DPAA2_ETH_STORE_SIZE		16
 
 /* Maximum receive frame size is 64K */
@@ -121,9 +120,6 @@ struct dpaa2_eth_swa {
 #define DPAA2_FD_CTRL_PTA		0x00800000
 #define DPAA2_FD_CTRL_PTV1		0x00400000
 
-/* TODO: we may want to move this and other WRIOP related defines
- * to a separate header
- */
 /* Frame annotation status */
 struct dpaa2_fas {
 	u8 reserved;
@@ -178,7 +174,7 @@ struct dpaa2_fas {
 					 DPAA2_ETH_FAS_L4CE)
 /* Unsupported features in the ingress */
 #define DPAA2_ETH_RX_UNSUPP_MASK	DPAA2_ETH_FAS_MS
-/* TODO trim down the bitmask; not all of them apply to Tx-confirm */
+/* Tx errors */
 #define DPAA2_ETH_TXCONF_ERR_MASK	(DPAA2_ETH_FAS_KSE	| \
 					 DPAA2_ETH_FAS_EOFHE	| \
 					 DPAA2_ETH_FAS_MNLE	| \
@@ -187,12 +183,6 @@ struct dpaa2_fas {
 /* Time in milliseconds between link state updates */
 #define DPAA2_ETH_LINK_STATE_REFRESH	1000
 
-/* TODO Temporarily, until dpni_clear_mac_table() is implemented */
-struct dpaa2_eth_mac_list {
-	u8 addr[ETH_ALEN];
-	struct list_head list;
-};
-
 /* Driver statistics, other than those in struct rtnl_link_stats64.
  * These are usually collected per-CPU and aggregated by ethtool.
  */
@@ -224,7 +214,6 @@ struct dpaa2_eth_ch_stats {
 };
 
 /* Maximum number of Rx queues associated with a DPNI */
-/* TODO: Use dynamic allocation based on max dist size reported by MC */
 #define DPAA2_ETH_MAX_RX_QUEUES		16
 #define DPAA2_ETH_MAX_TX_QUEUES		NR_CPUS
 #define DPAA2_ETH_MAX_RX_ERR_QUEUES	1
@@ -294,7 +283,6 @@ struct dpaa2_eth_priv {
 	struct dpni_buffer_layout buf_layout;
 	u16 tx_data_offset;
 
-	/* TODO: Support multiple BPs */
 	struct fsl_mc_device *dpbp_dev;
 	struct dpbp_attr dpbp_attrs;
 
@@ -347,7 +335,6 @@ struct dpaa2_eth_priv {
 #define dpaa2_eth_fs_enabled(priv)	\
 	((priv)->dpni_attrs.options & DPNI_OPT_DIST_FS)
 
-/*TODO: this should be taken from DPNI attributes */
 #define DPAA2_CLASSIFIER_ENTRY_COUNT 16
 
 /* Required by struct dpni_attr::ext_cfg_iova */
@@ -365,7 +352,6 @@ static int dpaa2_queue_count(struct dpaa2_eth_priv *priv)
 	if (!dpaa2_eth_hash_enabled(priv))
 		return 1;
 
-	/* TODO: fix for multiple TCs */
 	return priv->dpni_ext_cfg.tc_cfg[0].max_dist;
 }
 
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-ethtool.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-ethtool.c
index 5e20c4c..ce3c1bc 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-ethtool.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-ethtool.c
@@ -708,7 +708,7 @@ static int dpaa2_do_cls(struct net_device *net_dev,
 		rule_cfg.mask_iova = 0;
 	}
 
-	/* TODO: no way to control rule order in firmware! */
+	/* No way to control rule order in firmware */
 	if (add)
 		err = dpni_add_fs_entry(priv->mc_io, 0, priv->mc_token, 0,
 					&rule_cfg, (u16)fs->ring_cookie);
-- 
2.9.3

