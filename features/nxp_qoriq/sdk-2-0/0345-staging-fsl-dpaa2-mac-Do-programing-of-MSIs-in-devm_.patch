From d17e0a2ae334584e47cf0749d1a44112d86fd209 Mon Sep 17 00:00:00 2001
From: Itai Katz <itai.katz@freescale.com>
Date: Wed, 24 Jun 2015 18:10:26 +0300
Subject: [PATCH 345/752] staging: fsl-dpaa2: mac: Do programing of MSIs in
 devm_request_threaded_irq()

With the new dprc_set_obj_irq() we can now program MSIS in the device
in the callback invoked from devm_request_threaded_irq().
Since this callback is invoked with interrupts disabled, we need to
use an atomic portal, instead of the root DPRC's built-in portal
which is non-atomic.

Signed-off-by: Itai Katz <itai.katz@freescale.com>
Signed-off-by: J. German Rivera <German.Rivera@freescale.com>
[Stuart: split original patch up by component]
Signed-off-by: Stuart Yoder <stuart.yoder@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/mac/mac.c | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/mac/mac.c b/drivers/staging/fsl-dpaa2/mac/mac.c
index 49ae8f5..fb07d0c 100644
--- a/drivers/staging/fsl-dpaa2/mac/mac.c
+++ b/drivers/staging/fsl-dpaa2/mac/mac.c
@@ -436,7 +436,6 @@ err:
 static int ppx_setup_irqs(struct fsl_mc_device *mc_dev)
 {
 	int err;
-	struct dpmac_irq_cfg irq_cfg;
 
 	err = fsl_mc_allocate_irqs(mc_dev);
 	if (err) {
@@ -462,16 +461,6 @@ static int ppx_setup_irqs(struct fsl_mc_device *mc_dev)
 		goto free_irq;
 	}
 
-	irq_cfg.addr = mc_dev->irqs[0]->msi_paddr;
-	irq_cfg.val = mc_dev->irqs[0]->msi_value;
-	irq_cfg.user_irq_id = mc_dev->irqs[0]->irq_number;
-	err = dpmac_set_irq(mc_dev->mc_io, 0, mc_dev->mc_handle,
-			    DPMAC_IRQ_INDEX, &irq_cfg);
-	if (err) {
-		dev_err(&mc_dev->dev, "dpmac_set_irq err %d\n", err);
-		goto unregister_irq;
-	}
-
 	err = dpmac_set_irq_enable(mc_dev->mc_io, 0, mc_dev->mc_handle,
 				   DPMAC_IRQ_INDEX, 1);
 	if (err) {
-- 
2.9.3

