From 1b091ad5113b9d6b624b7b6234b57ba1112d554c Mon Sep 17 00:00:00 2001
From: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
Date: Wed, 22 Jul 2015 11:24:51 +0300
Subject: [PATCH 265/752] dpaa2-eth: Trace buffer pool seeding

Add ftrace support for buffer pool seeding. Individual buffers are
described by virtual and dma addresses and sizes, as well as by bpid.

Signed-off-by: Bogdan Hamciuc <bogdan.hamciuc@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h   | 57 ++++++++++++++++++++++
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c     |  6 +++
 2 files changed, 63 insertions(+)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
index d83d754..47414f8 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth-trace.h
@@ -41,6 +41,8 @@
 #include <linux/tracepoint.h>
 
 #define TR_FMT "[%s] fd: addr=0x%llx, len=%u, off=%u"
+/* trace_printk format for raw buffer event class */
+#define TR_BUF_FMT "[%s] vaddr=%p size=%zu dma_addr=%pad map_size=%zu bpid=%d"
 
 /* This is used to declare a class of events.
  * individual events of this type will be defined below.
@@ -116,6 +118,61 @@ DEFINE_EVENT(ldpaa_eth_fd, ldpaa_tx_conf_fd,
 	     TP_ARGS(netdev, fd)
 );
 
+/* Log data about raw buffers. Useful for tracing DPBP content. */
+TRACE_EVENT(ldpaa_eth_buf_seed,
+	    /* Trace function prototype */
+	    TP_PROTO(struct net_device *netdev,
+		     /* virtual address and size */
+		     void *vaddr,
+		     size_t size,
+		     /* dma map address and size */
+		     dma_addr_t dma_addr,
+		     size_t map_size,
+		     /* buffer pool id, if relevant */
+		     uint16_t bpid),
+
+	    /* Repeat argument list here */
+	    TP_ARGS(netdev, vaddr, size, dma_addr, map_size, bpid),
+
+	    /* A structure containing the relevant information we want
+	     * to record. Declare name and type for each normal element,
+	     * name, type and size for arrays. Use __string for variable
+	     * length strings.
+	     */
+	    TP_STRUCT__entry(
+			     __field(void *, vaddr)
+			     __field(size_t, size)
+			     __field(dma_addr_t, dma_addr)
+			     __field(size_t, map_size)
+			     __field(uint16_t, bpid)
+			     __string(name, netdev->name)
+	    ),
+
+	    /* The function that assigns values to the above declared
+	     * fields
+	     */
+	    TP_fast_assign(
+			   __entry->vaddr = vaddr;
+			   __entry->size = size;
+			   __entry->dma_addr = dma_addr;
+			   __entry->map_size = map_size;
+			   __entry->bpid = bpid;
+			   __assign_str(name, netdev->name);
+	    ),
+
+	    /* This is what gets printed when the trace event is
+	     * triggered.
+	     */
+	    /* TODO: print the status using __print_flags() */
+	    TP_printk(TR_BUF_FMT,
+		      __get_str(name),
+		      __entry->vaddr,
+		      __entry->size,
+		      &__entry->dma_addr,
+		      __entry->map_size,
+		      __entry->bpid)
+);
+
 /* If only one event of a certain type needs to be declared, use TRACE_EVENT().
  * The syntax is the same as for DECLARE_EVENT_CLASS().
  */
diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index 3cad0ab..ece0e75 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -1497,6 +1497,12 @@ static int ldpaa_bp_add_7(struct ldpaa_eth_priv *priv, uint16_t bpid)
 			goto err_map;
 		}
 		buf_array[i] = addr;
+
+		/* tracing point */
+		trace_ldpaa_eth_buf_seed(priv->net_dev,
+					 buf, LDPAA_ETH_BUF_RAW_SIZE,
+					 addr, LDPAA_ETH_RX_BUFFER_SIZE,
+					 bpid);
 	}
 
 release_bufs:
-- 
2.9.3

