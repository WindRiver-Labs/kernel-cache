From 7ed72c8dafe48d2ba8221c2aae3d3d01e9c5183d Mon Sep 17 00:00:00 2001
From: Roy Pledge <Roy.Pledge@freescale.com>
Date: Sun, 7 Feb 2016 07:48:04 -0500
Subject: [PATCH 468/752] fsl_dce: Updates for latest kernel

Some minor changes to DCE driver to support latest SDK kernel

Signed-off-by: Roy Pledge <Roy.Pledge@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 .../fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c    | 6 ++----
 drivers/staging/fsl_dce/tests/performance_simple/dce_perf_simple.c  | 2 +-
 .../staging/fsl_dce/tests/performance_simple/dce_sf_perf_simple.c   | 2 +-
 3 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c b/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
index 7650e08..0d934a5 100644
--- a/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
+++ b/drivers/staging/fsl_dce/tests/chunk_comp_def_cf/dce_chunk_comp_def_cf_test.c
@@ -674,7 +674,6 @@ static int compression_stateless_truncation_deflate_compoundframes_init(void)
 	struct dce_test_ctx *test_ctx;
 	struct cpumask backup_mask = current->cpus_allowed;
 	struct cpumask new_mask = *qman_affine_cpus();
-	char big_buf[200];
 
 	struct test_meta_info_t test_meta_info_array[] = {
 		{
@@ -715,9 +714,8 @@ static int compression_stateless_truncation_deflate_compoundframes_init(void)
 		},
 	};
 
-	cpumask_scnprintf(big_buf, 200, &new_mask);
-
-	pr_info("DCE TEST Start, cpu_mask = %s\n", big_buf);
+	pr_info("DCE TEST Start, cpu_mask = %*pb[l]\n",
+		cpumask_pr_args(&new_mask));
 
 	/* need to control on which cpu this module runs on */
 	test_ctx = kzalloc(sizeof(*test_ctx), GFP_KERNEL);
diff --git a/drivers/staging/fsl_dce/tests/performance_simple/dce_perf_simple.c b/drivers/staging/fsl_dce/tests/performance_simple/dce_perf_simple.c
index 388f420..28c940c 100644
--- a/drivers/staging/fsl_dce/tests/performance_simple/dce_perf_simple.c
+++ b/drivers/staging/fsl_dce/tests/performance_simple/dce_perf_simple.c
@@ -453,7 +453,7 @@ static int read_file(const char *file, char **data, int *data_len)
 	 * If we can't read the file, it's no good.
 	 * If we can't write the file, use it read-only.
 	 */
-	if (!(filp->f_op->read || filp->f_op->aio_read)) {
+	if (!filp->f_op->read) {
 		pr_err("file not readable: %s\n", file);
 		goto out;
 	}
diff --git a/drivers/staging/fsl_dce/tests/performance_simple/dce_sf_perf_simple.c b/drivers/staging/fsl_dce/tests/performance_simple/dce_sf_perf_simple.c
index 10154b1..6bb40a5 100644
--- a/drivers/staging/fsl_dce/tests/performance_simple/dce_sf_perf_simple.c
+++ b/drivers/staging/fsl_dce/tests/performance_simple/dce_sf_perf_simple.c
@@ -517,7 +517,7 @@ static int read_file(const char *file, char **data, int *data_len)
 	 * If we can't read the file, it's no good.
 	 * If we can't write the file, use it read-only.
 	 */
-	if (!(filp->f_op->read || filp->f_op->aio_read)) {
+	if (!filp->f_op->read) {
 		pr_err("file not readable: %s\n", file);
 		goto out;
 	}
-- 
2.9.3

