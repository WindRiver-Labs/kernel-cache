From d933264455bb59b057e1fad32980514aa6f8f97f Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Tue, 5 Apr 2016 17:54:14 +0300
Subject: [PATCH 689/752] staging: fsl-dpaa2/mac: Don't call devm_free_irq

MAC interrupts are registered with devm_request_threaded_irq(), so
there's no need to explicitly unregister them in case of a probe
error or at device remove, as the kernel will take care of that for us.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/mac/mac.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/mac/mac.c b/drivers/staging/fsl-dpaa2/mac/mac.c
index 696ddb4..639c1f4 100644
--- a/drivers/staging/fsl-dpaa2/mac/mac.c
+++ b/drivers/staging/fsl-dpaa2/mac/mac.c
@@ -427,13 +427,11 @@ static int setup_irqs(struct fsl_mc_device *mc_dev)
 				   DPMAC_IRQ_INDEX, 1);
 	if (err) {
 		dev_err(&mc_dev->dev, "dpmac_set_irq_enable err %d\n", err);
-		goto unregister_irq;
+		goto free_irq;
 	}
 
 	return 0;
 
-unregister_irq:
-	devm_free_irq(&mc_dev->dev, mc_dev->irqs[0]->irq_number, &mc_dev->dev);
 free_irq:
 	fsl_mc_free_irqs(mc_dev);
 
@@ -454,7 +452,6 @@ static void teardown_irqs(struct fsl_mc_device *mc_dev)
 	if (err)
 		dev_err(&mc_dev->dev, "dpmac_set_irq_enable err %d\n", err);
 
-	devm_free_irq(&mc_dev->dev, mc_dev->irqs[0]->irq_number, &mc_dev->dev);
 	fsl_mc_free_irqs(mc_dev);
 }
 
-- 
2.9.3

