From 35db5fb0ca8dd69119ebd518706e4c018c1bf1b1 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@freescale.com>
Date: Thu, 29 Oct 2015 19:46:43 +0200
Subject: [PATCH 318/752] dpaa2-eth: Move bcast address setup to
 dpaa2_eth_netdev_init

It seems to fit better there than directly in probe.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c | 23 +++++++++++------------
 1 file changed, 11 insertions(+), 12 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
index fa5c5b3..00f3f79 100644
--- a/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
+++ b/drivers/staging/fsl-dpaa2/ethernet/dpaa2-eth.c
@@ -2234,6 +2234,7 @@ static int dpaa2_eth_netdev_init(struct net_device *net_dev)
 	struct device *dev = net_dev->dev.parent;
 	struct dpaa2_eth_priv *priv = netdev_priv(net_dev);
 	u8 mac_addr[ETH_ALEN];
+	u8 bcast_addr[ETH_ALEN];
 
 	net_dev->netdev_ops = &dpaa2_eth_ops;
 
@@ -2270,6 +2271,16 @@ static int dpaa2_eth_netdev_init(struct net_device *net_dev)
 		memcpy(net_dev->dev_addr, mac_addr, net_dev->addr_len);
 	}
 
+	/* Explicitly add the broadcast address to the MAC filtering table;
+	 * the MC won't do that for us.
+	 */
+	eth_broadcast_addr(bcast_addr);
+	err = dpni_add_mac_addr(priv->mc_io, 0, priv->mc_token, bcast_addr);
+	if (err) {
+		dev_warn(dev, "dpni_add_mac_addr() failed (%d)\n", err);
+		/* Won't return an error; at least, we'd have egress traffic */
+	}
+
 	/* Reserve enough space to align buffer as per hardware requirement;
 	 * NOTE: priv->tx_data_offset MUST be initialized at this point.
 	 */
@@ -2564,7 +2575,6 @@ static int dpaa2_eth_probe(struct fsl_mc_device *dpni_dev)
 	struct net_device		*net_dev = NULL;
 	struct dpaa2_eth_priv		*priv = NULL;
 	int				err = 0;
-	u8				bcast_addr[ETH_ALEN];
 
 	dev = &dpni_dev->dev;
 
@@ -2657,17 +2667,6 @@ static int dpaa2_eth_probe(struct fsl_mc_device *dpni_dev)
 	if (err)
 		goto err_netdev_init;
 
-	/* Explicitly add the broadcast address to the MAC filtering table;
-	 * the MC won't do that for us.
-	 */
-	eth_broadcast_addr(bcast_addr);
-	err = dpni_add_mac_addr(priv->mc_io, 0, priv->mc_token, bcast_addr);
-	if (err) {
-		netdev_warn(net_dev,
-			    "dpni_add_mac_addr() failed with code %d\n", err);
-		/* Won't return an error; at least, we'd have egress traffic */
-	}
-
 	/* Configure checksum offload based on current interface flags */
 	err = dpaa2_eth_set_rx_csum(priv,
 				    !!(net_dev->features & NETIF_F_RXCSUM));
-- 
2.9.3

