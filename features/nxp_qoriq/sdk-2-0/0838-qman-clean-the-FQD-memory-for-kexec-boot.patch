From 99eef2e89becda98c1bc4f6209210f789a0ff946 Mon Sep 17 00:00:00 2001
From: Yanjiang Jin <yanjiang.jin@windriver.com>
Date: Tue, 17 Feb 2015 10:53:56 +0800
Subject: [PATCH 838/838] qman: clean the FQD memory for kexec boot

Clean the FQD memory for kexec boot.

Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_qbman/qman_config.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/fsl_qbman/qman_config.c b/drivers/staging/fsl_qbman/qman_config.c
index fda34c4..7cc571f 100644
--- a/drivers/staging/fsl_qbman/qman_config.c
+++ b/drivers/staging/fsl_qbman/qman_config.c
@@ -367,7 +367,7 @@ static int qm_is_initalized(struct qman *qm, enum qm_memory memory)
 #endif
 	return __qm_in(qm, offset + REG_offset_BAR);
 }
-static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
+static void qm_reserve_memory(struct qman *qm, enum qm_memory memory, int zero)
 {
 	u64 upper_ba = 0;
 	u32 lower_ba = 0;
@@ -377,6 +377,7 @@ static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
 	u32 size = 0;
 	u32 offset = (memory == qm_memory_fqd) ? REG_FQD_BARE : REG_PFDR_BARE;
 	int ret;
+	unsigned long vaddr;
 
 	upper_ba = __qm_in(qm, offset);
 	lower_ba = __qm_in(qm, offset + REG_offset_BAR);
@@ -391,6 +392,10 @@ static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
 	addr = max(addr, memblock_start_of_DRAM());
 	end = min(addr + size, memblock_end_of_DRAM());
 	ret = memblock_reserve(addr, end - addr);
+	vaddr = (unsigned long)phys_to_virt(addr);
+	if (zero)
+		memset((void *)vaddr, 0, end - addr);
+	flush_dcache_range(vaddr, vaddr + (end - addr));
 	WARN_ON(ret);
 }
 #else
@@ -398,7 +403,7 @@ static int qm_is_initalized(struct qman *qm, enum qm_memory memory)
 {
 	return 0;
 }
-static void qm_reserve_memory(struct qman *qm, enum qm_memory memory)
+static void qm_reserve_memory(struct qman *qm, enum qm_memory memory, int zero)
 {
 }
 #endif
@@ -581,7 +586,7 @@ static int __init fsl_qman_init(struct device_node *node)
 		/* Unfortunately we have to reserve those memory used for Qman
 		 * since currently we can't clean these usage from boot kernel.
 		 */
-			qm_reserve_memory(qm, qm_memory_fqd);
+			qm_reserve_memory(qm, qm_memory_fqd, 1);
 		if (!qm_is_initalized(qm, qm_memory_pfdr)) {
 			ret = parse_mem_property(node, "fsl,qman-pfdr",
 						&pfdr_a, &pfdr_sz, 0);
@@ -591,7 +596,7 @@ static int __init fsl_qman_init(struct device_node *node)
 		/* Unfortunately we have to reserve those memory used for Qman
 		 * since currently we can't clean these usage from boot kernel.
 		 */
-			qm_reserve_memory(qm, qm_memory_pfdr);
+			qm_reserve_memory(qm, qm_memory_pfdr, 0);
 	}
 	/* Global configuration */
 	qm_node = node;
-- 
2.0.2

