From c5b25d419afea42d845b1047a5583bd796b8efcf Mon Sep 17 00:00:00 2001
From: Kevin Hao <kexin.hao@windriver.com>
Date: Thu, 12 May 2016 09:51:22 +0800
Subject: [PATCH 819/838] powerpc64: kexec: fix the spin loop bug in kexec_wait

In the kexec_wait(), all the non-boot cpu spin on kexec_flag to wait
for the releasing of bootcpu. But we have used a wrong offset to load
the value of kexec_flag. Since the actual address we used to load the
value is in text code, the value is never null.  That means the non-boot
cpu never do the spin loop in the kexec_wait. Instead all the non-boot
cpu spin loop on the __secondary_hold_spinloop in __secondary_hold().
So in the following scenario, we would run into a TLB error for
instruction fetch on a SMT core.
       primary thread                  secondary thread
     kexec_smp_down()
       kexec_smp_wait()
         kexec_create_tlb()
                                       the 1:1 mapping tlb created by
                                       primary thread in kexec_create_tlb()
                                       may be overridden by this thread
         kexec_wait()
           bnea    0x60
             __secondary_hold()

So fix this by using the correct offset to load kexec_flag to make sure
that all the non-boot cpu are really waiting in kexec_wait() before the
boot cpu release them.

Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/powerpc/kernel/misc_64.S | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/powerpc/kernel/misc_64.S b/arch/powerpc/kernel/misc_64.S
index 577ecc0..6e550b6 100644
--- a/arch/powerpc/kernel/misc_64.S
+++ b/arch/powerpc/kernel/misc_64.S
@@ -503,7 +503,7 @@ END_FTR_SECTION_IFSET(CPU_FTR_SMT)
 
 	bl	2f
 2:	mflr	r5
-	addi	r5,r5,kexec_flag-1b
+	addi	r5,r5,kexec_flag-2b
 
 99:	HMT_LOW
 #ifdef CONFIG_KEXEC		/* use no memory without kexec */
-- 
2.0.2

