From 0ca437c89f946dddea044c32e07cf2db8c802902 Mon Sep 17 00:00:00 2001
From: Ahmed Mansour <Ahmed.Mansour@freescale.com>
Date: Tue, 26 Jan 2016 16:21:35 -0500
Subject: [PATCH 644/752] fsl_dce/flib: Add status code & minor corrections

- Add MEMBER_END_SUSPEND as one of the DCE return status codes to
  support decompression of compressed data that is embedded in other
  data

- Minor spelling and formatting corrections

Signed-off-by: Ahmed Mansour <Ahmed.Mansour@freescale.com>
[Original patch taken from QorIQ-SDK-V2.0-20160527-yocto]
Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
---
 drivers/staging/fsl_dce/flib/dce_defs.h | 13 +++++++++----
 drivers/staging/fsl_dce/flib/dce_flow.c |  2 +-
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/staging/fsl_dce/flib/dce_defs.h b/drivers/staging/fsl_dce/flib/dce_defs.h
index 7e641f3..0a1874c 100644
--- a/drivers/staging/fsl_dce/flib/dce_defs.h
+++ b/drivers/staging/fsl_dce/flib/dce_defs.h
@@ -1651,10 +1651,10 @@ static inline u64 get_huffman_residue_cl2(const struct scf_128b *scf)
  * enum dce_status - This enumeration depicts all of the possible status codes
  *	that can appear in the output frame status field.
  *
- * @FULLY_PROCESSED:	The work unit data was fully processed without
+ * @FULLY_PROCESSED	The work unit data was fully processed without
  *			encountering an exception, and the work unit was not
  *			marked as an end of Stream (no DCE_Z_FINISH parameter).
- * @STREAM_END:		The work unit data was fully processed without
+ * @STREAM_END		The work unit data was fully processed without
  *			encountering an exception, and was marked as an end of
  *			Stream with the DCE_Z_FINISH flush parameter.
  * @INPUT_STARVED	The compressed input Frame did not contain an integral
@@ -1665,7 +1665,11 @@ static inline u64 get_huffman_residue_cl2(const struct scf_128b *scf)
  *			end of block code;
  *			i.e. “invalid code * missing end-of-block” in *msg
  *			(zlib software library equivalent).
- * @Z_BLOCK_SUSPENDED	The decompressor module halted processing of an input
+ * @MEMBER_END_SUSPEND	The decompresser module halted processing of an input
+ *			Frame at the end of a compressed member (after the
+ *			BFINAL block and any gzip trailer). This code can only
+ *			occur on stateful Flows in recycling mode
+ * @Z_BLOCK_SUSPENED	The decompresser module halted processing of an input
  *			Frame at the end of a compressed block (or block header
  *			if Z_FLUSH = Z_BLOCK or Z_TREES). This code can only
  *			occur on stateful Flows in recycling mode
@@ -1865,7 +1869,8 @@ enum dce_status {
 	FULLY_PROCESSED				= 0x00,
 	STREAM_END				= 0x01,
 	INPUT_STARVED				= 0x10,
-	Z_BLOCK_SUSPENDED			= 0x12,
+	MEMBER_END_SUSPEND			= 0x11,
+	Z_BLOCK_SUSPEND				= 0x12,
 	OUTPUT_BLOCKED_SUSPEND			= 0x14,
 	ACQUIRE_DATA_BUFFER_DENIED_SUSPEND	= 0x15,
 	ACQUIRE_TABLE_BUFFER_DENIED_SUSPEND	= 0x16,
diff --git a/drivers/staging/fsl_dce/flib/dce_flow.c b/drivers/staging/fsl_dce/flib/dce_flow.c
index ec11090..4f7c07c 100644
--- a/drivers/staging/fsl_dce/flib/dce_flow.c
+++ b/drivers/staging/fsl_dce/flib/dce_flow.c
@@ -485,7 +485,7 @@ static enum qman_cb_dqrr_result cb_dqrr(struct qman_portal *portal,
 	enum dce_status status = dq->fd.status & DCE_PROCESS_STATUS_MASK;
 	struct fsl_dce_flow *flow = (struct fsl_dce_flow *)fq;
 
-	/* Put flow into DEAD state is a erious error is received ? */
+	/* Put flow into DEAD state if a serious error is received ? */
 	cb_helper(portal, flow, &dq->fd, status);
 	return qman_cb_dqrr_consume;
 }
-- 
2.9.3

