From 91f8f0ce60bb992b30551244734d668f2aac75c8 Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Wed, 16 Dec 2015 10:04:47 +0800
Subject: [PATCH 780/780] ARM:ls1021a: remove dma-coherent and gianfar snooping
 support in Rev1 soc

There is a HW defect in ls1021a Rev1 soc, it is known that there are
H/W coherency issues at least for the Tx side, it can't support the
snooping and dma-coherent

Signed-off-by: czou <cao.zou@windriver.com>
Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
---
 arch/arm/mach-imx/platsmp.c                | 13 +++++++++++--
 drivers/net/ethernet/freescale/gianfar.h   |  9 +++++++++
 include/linux/platform_data/dcfg-ls1021a.h | 10 ++++++++++
 3 files changed, 30 insertions(+), 2 deletions(-)
 create mode 100644 include/linux/platform_data/dcfg-ls1021a.h

diff --git a/arch/arm/mach-imx/platsmp.c b/arch/arm/mach-imx/platsmp.c
index 711dbbd..a1dc2fe 100644
--- a/arch/arm/mach-imx/platsmp.c
+++ b/arch/arm/mach-imx/platsmp.c
@@ -20,11 +20,13 @@
 #include <asm/smp_scu.h>
 #include <asm/mach/map.h>
 
+#include <linux/platform_data/dcfg-ls1021a.h>
 #include "common.h"
 #include "hardware.h"
 
 u32 g_diag_reg;
 static void __iomem *scu_base;
+static void __iomem *dcfg_base;
 
 static struct map_desc scu_io_desc __initdata = {
 	/* .virtual and .pfn are run-time assigned */
@@ -53,6 +55,15 @@ static int imx_boot_secondary(unsigned int cpu, struct task_struct *idle)
 	return 0;
 }
 
+#ifdef CONFIG_SOC_LS1021A
+#define  LS1021A_SOC_REV1 0x10
+#define	 DCFG_CCSR_SVR 0x0A4
+int is_ls1021a_rev1(void)
+{
+	return LS1021A_SOC_REV1 == (ioread32be(dcfg_base + DCFG_CCSR_SVR) & 0x1f);
+}
+#endif
+
 /*
  * Initialise the CPU possible map early - this describes the CPUs
  * which may be present or become present in the system.
@@ -110,7 +121,6 @@ static int ls1021a_boot_secondary(unsigned int cpu, struct task_struct *idle)
 static void __init ls1021a_smp_prepare_cpus(unsigned int max_cpus)
 {
 	struct device_node *np;
-	void __iomem *dcfg_base;
 	unsigned long paddr;
 
 	np = of_find_compatible_node(NULL, NULL, "fsl,ls1021a-dcfg");
@@ -120,7 +130,6 @@ static void __init ls1021a_smp_prepare_cpus(unsigned int max_cpus)
 	paddr = virt_to_phys(secondary_startup);
 	writel_relaxed(cpu_to_be32(paddr), dcfg_base + DCFG_CCSR_SCRATCHRW1);
 
-	iounmap(dcfg_base);
 }
 
 const struct smp_operations ls1021a_smp_ops __initconst = {
diff --git a/drivers/net/ethernet/freescale/gianfar.h b/drivers/net/ethernet/freescale/gianfar.h
index 8d20691..fd1d5c7 100644
--- a/drivers/net/ethernet/freescale/gianfar.h
+++ b/drivers/net/ethernet/freescale/gianfar.h
@@ -45,6 +45,7 @@
 #include <linux/crc32.h>
 #include <linux/workqueue.h>
 #include <linux/ethtool.h>
+#include <linux/platform_data/dcfg-ls1021a.h>
 
 struct ethtool_flow_spec_container {
 	struct ethtool_rx_flow_spec fs;
@@ -236,7 +237,11 @@ extern const char gfar_driver_version[];
 #define RQUEUE_EN_ALL		0x000000FF
 
 /* Init to do tx snooping for buffers and descriptors */
+#ifdef CONFIG_SOC_LS1021A
+#define DMACTRL_INIT_SETTINGS   (is_ls1021a_rev1() ? 0x00000003 : 0x000000c3)
+#else
 #define DMACTRL_INIT_SETTINGS   0x000000c3
+#endif
 #define DMACTRL_GRS             0x00000010
 #define DMACTRL_GTS             0x00000008
 #define DMACTRL_LE		0x00008000
@@ -403,7 +408,11 @@ extern const char gfar_driver_version[];
 #define ATTR_BUFSTASH		0x00004000
 
 #define ATTR_SNOOPING		0x000000c0
+#ifdef CONFIG_SOC_LS1021A
+#define ATTR_INIT_SETTINGS      (is_ls1021a_rev1() ? 0 : ATTR_SNOOPING)
+#else
 #define ATTR_INIT_SETTINGS      ATTR_SNOOPING
+#endif
 
 #define ATTRELI_INIT_SETTINGS   0x0
 #define ATTRELI_EL_MASK		0x3fff0000
diff --git a/include/linux/platform_data/dcfg-ls1021a.h b/include/linux/platform_data/dcfg-ls1021a.h
new file mode 100644
index 0000000..4bc913d
--- /dev/null
+++ b/include/linux/platform_data/dcfg-ls1021a.h
@@ -0,0 +1,10 @@
+#ifndef __MACH_LS1021A_H
+#define __MACH_LS1021A_H
+
+#ifdef CONFIG_SOC_LS1021A
+int is_ls1021a_rev1(void);
+#else
+inline int is_ls1021a_rev1(void) { return 0; }
+#endif
+
+#endif
-- 
2.0.2

