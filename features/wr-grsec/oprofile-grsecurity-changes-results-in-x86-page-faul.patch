From 1fdf0f413ebb242daeea117521a502f9bd4c9944 Mon Sep 17 00:00:00 2001
From: Amy Fong <amy.fong@windriver.com>
Date: Wed, 20 Feb 2013 07:31:35 -0800
Subject: [PATCH 13/16] oprofile: grsecurity changes results in x86 page fault

This fix is required for x86, an earlier fix for x86-64
was created:

    oprofile: grsecurity changes results in x86-64 page fault

In a nutshell, pax moves the thread info structure off of
the kernel stack and into task struct, so we need to modify
how the information is accessed. Otherwise, the kernel ends
up accessing the wrong information and we eventually end up
with a page fault.

Signed-off-by: Amy Fong <amy.fong@windriver.com>
---
 arch/x86/kernel/dumpstack_32.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kernel/dumpstack_32.c b/arch/x86/kernel/dumpstack_32.c
index 540657f..d27eec9 100644
--- a/arch/x86/kernel/dumpstack_32.c
+++ b/arch/x86/kernel/dumpstack_32.c
@@ -38,8 +38,9 @@ void dump_trace(struct task_struct *task, struct pt_regs *regs,
 		bp = stack_frame(task, regs);
 
 	for (;;) {
-		void *stack_start = (void *)((unsigned long)stack & ~(THREAD_SIZE-1));
+		void *stack_start;
 
+		stack_start = task_stack_page(task);
 		bp = ops->walk_stack(task, stack_start, stack, bp, ops, data, NULL, &graph);
 
 		if (stack_start == task_stack_page(task))
-- 
1.7.9.5

