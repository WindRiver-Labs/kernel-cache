From 1ef27320d8d527cd0ddfc28179a3ba2ea2fa1317 Mon Sep 17 00:00:00 2001
From: Han Chao <chan@windriver.com>
Date: Mon, 17 Mar 2014 17:21:24 +0800
Subject: [PATCH 16/16] grsec: fix the grsec_task_lock for !CONFIG_GRKERNSEC

We introduced the grsec_task_lock previously to fix the 'grsec
restart' race issue. Here we also want to make the fix safe for
!CONFIG_GRKERNSEC case.

Signed-off-by: Liang Li <liang.li@windriver.com>
Signed-off-by: Han Chao <chan@windriver.com>
---
 fs/exec.c     |    7 +++++--
 kernel/cred.c |    4 ++++
 mm/mmap.c     |    6 ++++++
 3 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/fs/exec.c b/fs/exec.c
index efd4867..7efda61 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -1678,11 +1678,14 @@ static int do_execve_common(const char *filename,
 		retval = -EACCES;
 		goto out_fail;
 	}
-
+#if defined(CONFIG_GRKERNSEC)
     read_lock(&grsec_tcb_lock);
-	retval = gr_set_proc_label(file->f_path.dentry, file->f_path.mnt,
+#endif
+    retval = gr_set_proc_label(file->f_path.dentry, file->f_path.mnt,
 					bprm->unsafe);
+#if defined(CONFIG_GRKERNSEC)
     read_unlock(&grsec_tcb_lock);
+#endif
 	if (retval < 0)
 		goto out_fail;
 
diff --git a/kernel/cred.c b/kernel/cred.c
index 1f66ccf..0d4998e 100644
--- a/kernel/cred.c
+++ b/kernel/cred.c
@@ -441,9 +441,13 @@ static int __commit_creds(struct cred *new)
 
 	get_cred(new); /* we will require a ref for the subj creds too */
 
+#if defined(CONFIG_GRKERNSEC)
 	read_lock(&grsec_tcb_lock);
+#endif
 	gr_set_role_label(task, new->uid, new->gid);
+#if defined(CONFIG_GRKERNSEC)
 	read_unlock(&grsec_tcb_lock);
+#endif
 
 	/* dumpability changes */
 	if (!uid_eq(old->euid, new->euid) ||
diff --git a/mm/mmap.c b/mm/mmap.c
index 248aeb8..344ed6a 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -1467,12 +1467,18 @@ unsigned long do_mmap_pgoff(struct file *file, unsigned long addr,
 			vm_flags |= VM_NORESERVE;
 	}
 
+#if defined(CONFIG_GRKERNSEC)
 	read_lock(&grsec_tcb_lock);
+#endif
 	if (!gr_acl_handle_mmap(file, prot)) {
+#if defined(CONFIG_GRKERNSEC)
 		read_unlock(&grsec_tcb_lock);
+#endif
 		return -EACCES;
 	}
+#if defined(CONFIG_GRKERNSEC)
 	read_unlock(&grsec_tcb_lock);
+#endif
 
 	addr = mmap_region(file, addr, len, vm_flags, pgoff);
 	if (!IS_ERR_VALUE(addr) &&
-- 
1.7.9.5

