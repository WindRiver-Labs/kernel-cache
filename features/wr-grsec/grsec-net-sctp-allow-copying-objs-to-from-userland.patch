From bd0999562bb914ae5ad3cc66a9f1df93f98eb408 Mon Sep 17 00:00:00 2001
From: "Roy.Li" <rongqing.li@windriver.com>
Date: Mon, 7 Jan 2013 14:12:23 +0800
Subject: [PATCH 05/16] grsec/net/sctp: allow copying objs to/from userland

when call setsockopt_events() in cgl kernel, the system will halt with
below trace:
       Call Trace:
       - Pref. proto [<001221ac>] pax_report_usercopy+0x8c/0xe0
     .. : SCTP
     [<0005c6d7>] ? get_parent_ip+0x27/0x40
     - TLS meth [<0010ff20>] check_object_size+0xc0/0xd0
     od ... : Separat [<00717df4>] ? pci_add_new_bus+0x104/0x310
     [<00769bdd>] sctp_setsockopt+0x6cd/0x14e0 [sctp]
     e port
     TLS :  [<00629f78>] sock_common_setsockopt+0x28/0x40
     [<0062903d>] sys_setsockopt+0x5d/0x150
     [<0010ff01>] ? check_object_size+0xa1/0xd0
     [<00629b81>] sys_socketcall+0x341/0x450
     [<0073a16a>ort_usercopy+0x8c/0xe0
     [<0005c6d7>] ? get_parent_ip+0x27/0x40
     [<0010ff20>] check_object_size+0xc0/0xd0
     [<00717df4>] ? pci_add_new_bus+0x104/0x310
     [<00769bdd>] sctp_setsockopt+0x6cd/0x14e0 [sctp]
     [<00629f78>] sock_common_setsockopt+0x28/0x40
     [<0062903d>] sys_setsockopt+0x5d/0x150
     [<0010ff01>] ? check Not tainted 3.4.20-grsec-WR5.0.1.0_cgl #2

The cause is that the memory of struct sctp_sk is allocated from
SCTPv6 memory cache (created by kmem_cache_create), can not allow
copying data to/from userland. and other functions of sctp module
have wanted to copy data to/from userland, so we should allow
copying objs to/from userland

Signed-off-by: Roy.Li <rongqing.li@windriver.com>
Signed-off-by: Han Chao <chan@windriver.com>
---
 net/sctp/socket.c |    2 ++
 1 file changed, 2 insertions(+)

diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index 4530ee0..85754cc 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -7076,6 +7076,7 @@ struct proto sctp_prot = {
 	.enter_memory_pressure = sctp_enter_memory_pressure,
 	.memory_allocated = &sctp_memory_allocated,
 	.sockets_allocated = &sctp_sockets_allocated,
+	.slab_flags	= SLAB_USERCOPY,
 };
 
 #if IS_ENABLED(CONFIG_IPV6)
@@ -7108,5 +7109,6 @@ struct proto sctpv6_prot = {
 	.enter_memory_pressure = sctp_enter_memory_pressure,
 	.memory_allocated = &sctp_memory_allocated,
 	.sockets_allocated = &sctp_sockets_allocated,
+	.slab_flags	= SLAB_USERCOPY,
 };
 #endif /* IS_ENABLED(CONFIG_IPV6) */
-- 
1.7.9.5

