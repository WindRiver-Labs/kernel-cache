From 6148727ee7503c6be7822a54ca2e3734467201d4 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Wed, 17 Sep 2014 16:42:03 -0500
Subject: [PATCH 1213/1587] ARM: OMAP2: pm33xx: Fix race condition between
 cpuidle and suspend

CPUIdle does not get disabled until noirq suspend, but am33xx_pm_enter
is called early in the suspend sequence, which configures the wkup_m3
for deep sleep before waiting for the m3_irq2 interrupt. On AM43xx, this
interrupt is triggerred by a WFI instruction with MPU clockdomain set to
HW_AUTO and SCU set to low power state, which is the same condition present
in cpuidle state.

If system attempts to enter cpuidle c-state during
suspend path (happens very rarely) the system will hang because it will
gate the MPU clock and pass control to wkup_m3 which attempts to put
system in DeepSleep when it is not actually prepared.

By using cpu_idle_poll_ctrl we can prevent cpuidle from entering
c-states during the suspend path and prevent this hang. Also useful on
AM33xx to prevent suspend from failing without a hang due to cpuidle
reconfiguring the wkup_m3 during suspend for mpu pll bypass only rather
than deep sleep.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/pm33xx.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 52defbf..3b20b95 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -333,6 +333,7 @@ static int am33xx_pm_begin(suspend_state_t state)
 {
 	int i;
 
+	cpu_idle_poll_ctrl(true);
 
 	switch (state) {
 	case PM_SUSPEND_MEM:
@@ -372,6 +373,8 @@ static void am33xx_pm_end(void)
 	if (retrigger_irq)
 		writel_relaxed(1 << (retrigger_irq & 31),
 			       gic_dist_base + 0x200 + retrigger_irq / 32 * 4);
+
+	cpu_idle_poll_ctrl(false);
 }
 
 static int am33xx_pm_valid(suspend_state_t state)
-- 
1.7.5.4

