From 1b6189185bfb8ae2f1b30c5f2a4c0c20e7533ab1 Mon Sep 17 00:00:00 2001
From: Benoit Parrot <bparrot@ti.com>
Date: Thu, 20 Nov 2014 17:29:04 -0600
Subject: [PATCH 1449/1587] v4l: ti-vpe: vip: Flush Q/DQ lists even if not
 streaming

When start_streaming fails, driver would return some error but it
might be possible that some buffers are already queued in the driver.
When closing the device or explicitely calling stream off, driver
doesn't flush all the buffers from Q list and DQ list if vb2 isn't streaming.

Fix this by flushing all the buffers in stop_streaming irrespective of
whether streaming or not.

Signed-off-by: Nikhil Devshatwar <nikhil.nd@ti.com>
Signed-off-by: Benoit Parrot <bparrot@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/media/platform/ti-vpe/vip.c |   16 +++++++---------
 1 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/ti-vpe/vip.c b/drivers/media/platform/ti-vpe/vip.c
index daef984..3f8ce88 100644
--- a/drivers/media/platform/ti-vpe/vip.c
+++ b/drivers/media/platform/ti-vpe/vip.c
@@ -1868,14 +1868,6 @@ static int vip_stop_streaming(struct vb2_queue *vq)
 	struct vip_port *port = stream->port;
 	struct vip_dev *dev = port->dev;
 	struct vip_buffer *buf;
-	unsigned long flags;
-
-	if (!vb2_is_streaming(vq))
-		return 0;
-
-	spin_lock_irqsave(&dev->slock, flags);
-	vpdma_unmap_desc_buf(dev->shared->vpdma, &dev->desc_list.buf);
-	vpdma_reset_desc_list(&dev->desc_list);
 
 	disable_irqs(dev, dev->slice_id);
 
@@ -1893,7 +1885,13 @@ static int vip_stop_streaming(struct vb2_queue *vq)
 		list_del(&buf->list);
 		vb2_buffer_done(&buf->vb, VB2_BUF_STATE_ERROR);
 	}
-	spin_unlock_irqrestore(&dev->slock, flags);
+
+	if (!vb2_is_streaming(vq))
+		return 0;
+
+	vpdma_unmap_desc_buf(dev->shared->vpdma, &dev->desc_list.buf);
+	vpdma_reset_desc_list(&dev->desc_list);
+
 	return 0;
 }
 
-- 
1.7.5.4

