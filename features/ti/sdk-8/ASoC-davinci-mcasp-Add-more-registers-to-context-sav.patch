From 5f1d0734f32c10d54165389054b98f7cc0c09c55 Mon Sep 17 00:00:00 2001
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date: Thu, 25 Sep 2014 18:55:15 +0000
Subject: [PATCH 1239/1587] ASoC: davinci-mcasp: Add more registers to context
 saving/restore

We need to save and restore more registers than what we do right now in
order to be able to have the same configuration before the suspend.

[detheridge@ti.com - fixed up checkpatch warning in orig patch]

Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
Signed-off-by: Darren Etheridge <detheridge@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 sound/soc/davinci/davinci-mcasp.c |   38 +++++++++++++++++++++++++++++++++++++
 1 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/sound/soc/davinci/davinci-mcasp.c b/sound/soc/davinci/davinci-mcasp.c
index 9bb769c..01489d2 100644
--- a/sound/soc/davinci/davinci-mcasp.c
+++ b/sound/soc/davinci/davinci-mcasp.c
@@ -49,7 +49,15 @@ struct davinci_mcasp_context {
 	u32	rxfmt;
 	u32	aclkxctl;
 	u32	aclkrctl;
+	u32	ahclkxctl;
+	u32	ahclkrctl;
 	u32	pdir;
+	u32	rxmask;
+	u32	txmask;
+	u32	rxtdm;
+	u32	txtdm;
+	u32	rfifoctl;
+	u32	wfifoctl;
 };
 
 struct davinci_mcasp {
@@ -874,6 +882,7 @@ static int davinci_mcasp_suspend(struct snd_soc_dai *dai)
 {
 	struct davinci_mcasp *mcasp = snd_soc_dai_get_drvdata(dai);
 	struct davinci_mcasp_context *context = &mcasp->context;
+	u32 reg;
 
 	context->txfmtctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_TXFMCTL_REG);
 	context->rxfmtctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_RXFMCTL_REG);
@@ -881,7 +890,21 @@ static int davinci_mcasp_suspend(struct snd_soc_dai *dai)
 	context->rxfmt = mcasp_get_reg(mcasp, DAVINCI_MCASP_RXFMT_REG);
 	context->aclkxctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_ACLKXCTL_REG);
 	context->aclkrctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_ACLKRCTL_REG);
+	context->ahclkxctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_AHCLKXCTL_REG);
+	context->ahclkrctl = mcasp_get_reg(mcasp, DAVINCI_MCASP_AHCLKRCTL_REG);
 	context->pdir = mcasp_get_reg(mcasp, DAVINCI_MCASP_PDIR_REG);
+	context->rxmask = mcasp_get_reg(mcasp, DAVINCI_MCASP_RXMASK_REG);
+	context->txmask = mcasp_get_reg(mcasp, DAVINCI_MCASP_TXMASK_REG);
+	context->rxtdm = mcasp_get_reg(mcasp, DAVINCI_MCASP_RXTDM_REG);
+	context->txtdm = mcasp_get_reg(mcasp, DAVINCI_MCASP_TXTDM_REG);
+	if (mcasp->txnumevt) {
+		reg = mcasp->fifo_base + MCASP_WFIFOCTL_OFFSET;
+		context->wfifoctl = mcasp_get_reg(mcasp, reg);
+	}
+	if (mcasp->rxnumevt) {
+		reg = mcasp->fifo_base + MCASP_RFIFOCTL_OFFSET;
+		context->rfifoctl = mcasp_get_reg(mcasp, reg);
+	}
 
 	return 0;
 }
@@ -890,6 +913,7 @@ static int davinci_mcasp_resume(struct snd_soc_dai *dai)
 {
 	struct davinci_mcasp *mcasp = snd_soc_dai_get_drvdata(dai);
 	struct davinci_mcasp_context *context = &mcasp->context;
+	u32 reg;
 
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_TXFMCTL_REG, context->txfmtctl);
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_RXFMCTL_REG, context->rxfmtctl);
@@ -897,7 +921,21 @@ static int davinci_mcasp_resume(struct snd_soc_dai *dai)
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_RXFMT_REG, context->rxfmt);
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_ACLKXCTL_REG, context->aclkxctl);
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_ACLKRCTL_REG, context->aclkrctl);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_AHCLKXCTL_REG, context->ahclkxctl);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_AHCLKRCTL_REG, context->ahclkrctl);
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_PDIR_REG, context->pdir);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_RXMASK_REG, context->rxmask);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_TXMASK_REG, context->txmask);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_RXTDM_REG, context->rxtdm);
+	mcasp_set_reg(mcasp, DAVINCI_MCASP_TXTDM_REG, context->txtdm);
+	if (mcasp->txnumevt) {
+		reg = mcasp->fifo_base + MCASP_WFIFOCTL_OFFSET;
+		mcasp_set_reg(mcasp, reg, context->wfifoctl);
+	}
+	if (mcasp->rxnumevt) {
+		reg = mcasp->fifo_base + MCASP_RFIFOCTL_OFFSET;
+		mcasp_set_reg(mcasp, reg, context->rfifoctl);
+	}
 
 	return 0;
 }
-- 
1.7.5.4

