From 4fecf8a688b33d23fe0522c4e2f6a54bef8181cb Mon Sep 17 00:00:00 2001
From: Russ Dill <russ.dill@ti.com>
Date: Fri, 25 Jul 2014 17:52:41 -0500
Subject: [PATCH 0940/1587] ARM: AM33XX: Don't rewrite SDRAM_CONFIG register
 for DDR2 systems

When the EMIF (memory controller) resets after losing power, the
EMIF_SDRAM_CONFIG register gets loaded with the contents of the
CONTROL_SECURE_SDRAM_CONFIG register. This is so that reinitializations
of the SDRAM that occur when writing to this register are not necessary
at resume time.

Program the CONTROL_SECURE_SDRAM_CONFIG register once at init time rather
than the SDRAM_CONFIG register at every resume.

This is needed to make the most gains out of CPU idle, which is very
sensitive to return to active timing.

Signed-off-by: Russ Dill <Russ.Dill@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/control.h   |    3 +++
 arch/arm/mach-omap2/pm33xx.c    |   10 ++++++++++
 arch/arm/mach-omap2/sleep33xx.S |   28 ----------------------------
 3 files changed, 13 insertions(+), 28 deletions(-)

diff --git a/arch/arm/mach-omap2/control.h b/arch/arm/mach-omap2/control.h
index 405979e..657006d 100644
--- a/arch/arm/mach-omap2/control.h
+++ b/arch/arm/mach-omap2/control.h
@@ -358,6 +358,9 @@
 #define AM33XX_CONTROL_STATUS_SYSBOOT1_WIDTH		0x2
 #define AM33XX_CONTROL_STATUS_SYSBOOT1_MASK		(0x3 << 22)
 
+/* AM33XX CONTROL_SECURE_SDRAM_CONFIG register */
+#define AM33XX_CONTROL_SECURE_SDRAM_CONFIG	0x110
+
 /* AM33XX PWMSS Control register */
 #define AM33XX_PWMSS_TBCLK_CLKCTRL			0x664
 
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 7cb33a5..30cb764 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -304,6 +304,8 @@ static int __init am43xx_map_scu(void)
 
 static int am33xx_suspend_init(void)
 {
+	u32 temp;
+
 	gfx_l4ls_clkdm = clkdm_lookup("gfx_l4ls_gfx_clkdm");
 	l3s_clkdm = clkdm_lookup("l3s_clkdm");
 	l4fw_clkdm = clkdm_lookup("l4fw_clkdm");
@@ -319,6 +321,14 @@ static int am33xx_suspend_init(void)
 	am33xx_pm->ipc.reg0 = (AM33XX_OCMC_END -
 		am33xx_do_wfi_sz + am33xx_resume_offset + 0x4);
 
+	/*
+	 * Save SDRAM config in shadow register.
+	 * When the EMIF gets powered back up, its SDRAM_CONFIG register gets
+	 * loaded from the SECURE_SDRAM_CONFIG register.
+	 */
+	temp = readl(am33xx_emif_base + EMIF_SDRAM_CONFIG);
+	omap_ctrl_writel(temp, AM33XX_CONTROL_SECURE_SDRAM_CONFIG);
+
 	return 0;
 }
 
diff --git a/arch/arm/mach-omap2/sleep33xx.S b/arch/arm/mach-omap2/sleep33xx.S
index 98772a6..f0ba6d8 100644
--- a/arch/arm/mach-omap2/sleep33xx.S
+++ b/arch/arm/mach-omap2/sleep33xx.S
@@ -87,8 +87,6 @@ ENTRY(am33xx_do_wfi)
 
 	/* Save EMIF configuration */
 	ldr	r0, emif_addr_virt
-	ldr	r1, [r0, #EMIF_SDRAM_CONFIG]
-	str	r1, emif_sdcfg_val
 	ldr	r1, [r0, #EMIF_SDRAM_REFRESH_CONTROL]
 	str	r1, emif_ref_ctrl_val
 	ldr	r1, [r0, #EMIF_SDRAM_TIMING_1]
@@ -211,16 +209,6 @@ wait_emif_enable:
 	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CTRL_SHDW]
 
 	/*
-	 * A write to SDRAM CONFIG register triggers
-	 * an init sequence and hence it must be done
-	 * at the end for DDR2
-	 */
-	ldr r0, emif_addr_virt
-	add r0, r0, #EMIF_SDRAM_CONFIG
-	ldr r4, emif_sdcfg_val
-	str r4, [r0]
-
-	/*
 	 * Set SCTLR.C bit to allow data cache allocation
 	 */
 	mrc	p15, 0, r0, c1, c0, 0
@@ -297,20 +285,6 @@ wait_emif_enable1:
 	ldr	r1, emif_zqcfg_val
 	str	r1, [r0, #EMIF_SDRAM_OUTPUT_IMPEDANCE_CALIBRATION_CONFIG]
 
-	/* Write to SDRAM_CONFIG only for DDR2 */
-	ldr	r2, mem_type
-	cmp	r2, #MEM_TYPE_DDR2
-	bne	resume_to_ddr
-
-	/*
-	 * A write to SDRAM CONFIG register triggers
-	 * an init sequence and hence it must be done
-	 * at the end for DDR2
-	 */
-	ldr	r1, emif_sdcfg_val
-	str	r1, [r0, #EMIF_SDRAM_CONFIG]
-
-resume_to_ddr:
 	/* EMIF needs some time before read/write possible */
 	mov	r1, #EMIF_POWER_MGMT_DELAY_PERIOD
 wait_resume:
@@ -364,8 +338,6 @@ emif_timing2_val:
 	.word	0xDEADBEEF
 emif_timing3_val:
 	.word	0xDEADBEEF
-emif_sdcfg_val:
-	.word	0xDEADBEEF
 emif_ref_ctrl_val:
 	.word	0xDEADBEEF
 emif_zqcfg_val:
-- 
1.7.5.4

