From 385118defd526f00e220d4a80d4d85f9299c5cae Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Wed, 7 Jan 2015 09:15:45 -0600
Subject: [PATCH 1573/1587] ARM: OMAP2+: sleep43xx: Add missing registers to
 EMIF save and restore

AM437x now supports hardware leveling for DDR3 in the EMIF which uses a
few registers not used in software leveling. These registers were not
present in the suspend and resume EMIF context save code so add them so
they are not lost after a suspend operation.

Also make sure to save and restore the EMIF Class of Service registers
as these can also be configured by u-boot if needed and will be lost
after suspend if not saved.

Tested-by: Keerthy <j-keerthy@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/sleep43xx.S |   36 ++++++++++++++++++++++++++++++++++++
 1 files changed, 36 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/sleep43xx.S b/arch/arm/mach-omap2/sleep43xx.S
index d7fbbec..6b00982 100644
--- a/arch/arm/mach-omap2/sleep43xx.S
+++ b/arch/arm/mach-omap2/sleep43xx.S
@@ -116,6 +116,18 @@ ENTRY(am43xx_do_wfi)
 	str	r1, emif_zqcfg_val
 	ldr	r1, [r0, #EMIF_DDR_PHY_CTRL_1]
 	str	r1, emif_ddr_phy_ctlr_1
+	ldr	r1, [r0, #EMIF_READ_WRITE_LEVELING_RAMP_CONTROL]
+	str	r1, emif_rd_wr_level_ramp_ctrl
+	ldr	r1, [r0, #EMIF_READ_WRITE_EXECUTION_THRESHOLD]
+	str	r1, emif_rd_wr_exec_thresh
+	ldr	r1, [r0, #EMIF_COS_CONFIG]
+	str	r1, emif_cos_config
+	ldr	r1, [r0, #EMIF_PRIORITY_TO_CLASS_OF_SERVICE_MAPPING]
+	str	r1, emif_priority_to_cos_mapping
+	ldr	r1, [r0, #EMIF_CONNECTION_ID_TO_CLASS_OF_SERVICE_1_MAPPING]
+	str	r1, emif_connect_id_serv_1_map
+	ldr	r1, [r0, #EMIF_CONNECTION_ID_TO_CLASS_OF_SERVICE_2_MAPPING]
+	str	r1, emif_connect_id_serv_2_map
 	ldr	r1, [r0, #EMIF_LPDDR2_NVM_TIMING]
 	str	r1, emif_lpddr2_nvm_tim
 	ldr	r1, [r0, #EMIF_LPDDR2_NVM_TIMING_SHDW]
@@ -439,6 +451,18 @@ wait_emif_enable1:
 	ldr	r1, emif_ddr_phy_ctlr_1
 	str	r1, [r0, #EMIF_DDR_PHY_CTRL_1]
 	str	r1, [r0, #EMIF_DDR_PHY_CTRL_1_SHDW]
+	ldr	r1, emif_rd_wr_level_ramp_ctrl
+	str	r1, [r0, #EMIF_READ_WRITE_LEVELING_RAMP_CONTROL]
+	ldr	r1, emif_rd_wr_exec_thresh
+	str	r1, [r0, #EMIF_READ_WRITE_EXECUTION_THRESHOLD]
+	ldr	r1, emif_cos_config
+	str	r1, [r0, #EMIF_COS_CONFIG]
+	ldr	r1, emif_priority_to_cos_mapping
+	str	r1, [r0, #EMIF_PRIORITY_TO_CLASS_OF_SERVICE_MAPPING]
+	ldr	r1, emif_connect_id_serv_1_map
+	str	r1, [r0, #EMIF_CONNECTION_ID_TO_CLASS_OF_SERVICE_1_MAPPING]
+	ldr	r1, emif_connect_id_serv_2_map
+	str	r1, [r0, #EMIF_CONNECTION_ID_TO_CLASS_OF_SERVICE_2_MAPPING]
 	ldr	r1, emif_pmcr_val
 	str	r1, [r0, #EMIF_POWER_MANAGEMENT_CONTROL]
 	ldr	r1, emif_pmcr_shdw_val
@@ -638,6 +662,18 @@ emif_timing3_val_shdw:
 	.word	0xDEADBEEF
 emif_rd_lat_val:
 	.word	0xDEADBEEF
+emif_rd_wr_level_ramp_ctrl:
+	.word	0xDEADBEEF
+emif_rd_wr_exec_thresh:
+	.word	0xDEADBEEF
+emif_cos_config:
+	.word	0xDEADBEEF
+emif_priority_to_cos_mapping:
+	.word	0xDEADBEEF
+emif_connect_id_serv_1_map:
+	.word	0xDEADBEEF
+emif_connect_id_serv_2_map:
+	.word	0xDEADBEEF
 emif_ref_ctrl_val:
 	.word	0xDEADBEEF
 emif_ref_ctrl_val_shdw:
-- 
1.7.5.4

