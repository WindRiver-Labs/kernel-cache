From dc394b39155468e9910df48b0425bfa38195af9b Mon Sep 17 00:00:00 2001
From: Roger Quadros <rogerq@ti.com>
Date: Thu, 14 Aug 2014 15:54:42 +0300
Subject: [PATCH 0999/1587] net: c_can: Fix null pointer dereference on
 missing resource

If second memory resource is missing then 'res' will be NULL and
subsequent call to resource_size(res) will lead to a NULL pointer
dereference. Fix that.

Also fix the if condition from IS_ERR(priv->raminit_ctrlreg) to
!priv->raminit_ctrlreg as it will be NULL on error as a result of
devm_ioremap().

Signed-off-by: Roger Quadros <rogerq@ti.com>
Reviewed-by: Felipe Balbi <balbi@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/net/can/c_can/c_can_platform.c |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/net/can/c_can/c_can_platform.c b/drivers/net/can/c_can/c_can_platform.c
index 873b83a..f4073b9 100644
--- a/drivers/net/can/c_can/c_can_platform.c
+++ b/drivers/net/can/c_can/c_can_platform.c
@@ -194,9 +194,12 @@ static int c_can_plat_probe(struct platform_device *pdev)
 			priv->instance = pdev->id;
 
 		res = platform_get_resource(pdev, IORESOURCE_MEM, 1);
-		priv->raminit_ctrlreg = devm_ioremap(&pdev->dev, res->start,
-						     resource_size(res));
-		if (IS_ERR(priv->raminit_ctrlreg) || (int)priv->instance < 0)
+		if (res)
+			priv->raminit_ctrlreg = devm_ioremap(&pdev->dev,
+							     res->start,
+							     resource_size(res));
+
+		if (!priv->raminit_ctrlreg || (int)priv->instance < 0)
 			dev_info(&pdev->dev, "control memory is not used for raminit\n");
 		else
 			priv->raminit = c_can_hw_raminit;
-- 
1.7.5.4

