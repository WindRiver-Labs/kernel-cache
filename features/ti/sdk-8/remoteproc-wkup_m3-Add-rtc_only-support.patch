From 95c54fb734ce212a6ba30028ebf34637547d3671 Mon Sep 17 00:00:00 2001
From: Keerthy <j-keerthy@ti.com>
Date: Tue, 26 Aug 2014 11:13:37 +0530
Subject: [PATCH 1096/1587] remoteproc: wkup_m3: Add rtc_only support

Add rtc_only support.

Signed-off-by: Keerthy <j-keerthy@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/remoteproc/wkup_m3_rproc.c    |   38 +++++++++++++++++++++++++++++++-
 include/linux/platform_data/wkup_m3.h |    2 +
 2 files changed, 38 insertions(+), 2 deletions(-)

diff --git a/drivers/remoteproc/wkup_m3_rproc.c b/drivers/remoteproc/wkup_m3_rproc.c
index e66b77d..bb241ff 100644
--- a/drivers/remoteproc/wkup_m3_rproc.c
+++ b/drivers/remoteproc/wkup_m3_rproc.c
@@ -61,6 +61,7 @@ struct wkup_m3_rproc {
 	struct mbox_chan *mbox;
 
 	bool is_active;
+	bool is_rtc_only;
 };
 
 static struct wkup_m3_rproc *m3_rproc_static;
@@ -149,6 +150,12 @@ static void wkup_m3_mbox_callback(struct mbox_client *client, void *data)
 	omap_mbox_disable_irq(m3_rproc_static->mbox, IRQ_RX);
 }
 
+void wkup_m3_set_rtc_only_mode(void)
+{
+	m3_rproc_static->is_rtc_only = true;
+}
+EXPORT_SYMBOL(wkup_m3_set_rtc_only_mode);
+
 static int wkup_m3_rproc_start(struct rproc *rproc)
 {
 	struct wkup_m3_rproc *m3_rproc = rproc->priv;
@@ -180,7 +187,8 @@ static int wkup_m3_rproc_start(struct rproc *rproc)
 		return ret;
 	}
 
-	if (wkup_m3_pm_ops && wkup_m3_pm_ops->rproc_ready)
+	if (wkup_m3_pm_ops && wkup_m3_pm_ops->rproc_ready &&
+	    !m3_rproc_static->is_rtc_only)
 		wkup_m3_pm_ops->rproc_ready();
 
 	m3_rproc_static->is_active = 1;
@@ -190,6 +198,15 @@ static int wkup_m3_rproc_start(struct rproc *rproc)
 
 static int wkup_m3_rproc_stop(struct rproc *rproc)
 {
+	struct wkup_m3_rproc *m3_rproc = rproc->priv;
+	struct platform_device *pdev = m3_rproc->pdev;
+	struct device *dev = &pdev->dev;
+	struct wkup_m3_platform_data *pdata = dev->platform_data;
+
+	mbox_free_channel(m3_rproc_static->mbox);
+
+	pdata->assert_reset(pdev, pdata->reset_name);
+
 	return 0;
 }
 
@@ -335,7 +352,6 @@ static void wkup_m3_rproc_loader_thread(struct rproc *rproc)
 
 	do_exit(0);
 }
-
 static int wkup_m3_rproc_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -433,6 +449,23 @@ static int wkup_m3_rproc_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static int wkm3_suspend(struct device *dev)
+{
+	return 0;
+}
+
+static int wkm3_resume(struct device *dev)
+{
+	if (m3_rproc_static->is_rtc_only) {
+		rproc_shutdown(m3_rproc_static->rproc);
+		rproc_boot(m3_rproc_static->rproc);
+	}
+
+	m3_rproc_static->is_rtc_only = false;
+
+	return 0;
+}
+
 static int wkup_m3_rpm_suspend(struct device *dev)
 {
 	return -EBUSY;
@@ -444,6 +477,7 @@ static int wkup_m3_rpm_resume(struct device *dev)
 }
 
 static const struct dev_pm_ops wkup_m3_rproc_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(wkm3_suspend, wkm3_resume)
 	SET_RUNTIME_PM_OPS(wkup_m3_rpm_suspend, wkup_m3_rpm_resume, NULL)
 };
 
diff --git a/include/linux/platform_data/wkup_m3.h b/include/linux/platform_data/wkup_m3.h
index 6ee33d7..178bcf6 100644
--- a/include/linux/platform_data/wkup_m3.h
+++ b/include/linux/platform_data/wkup_m3.h
@@ -13,6 +13,8 @@
 #ifndef _LINUX_PLATFORM_DATA_WKUP_M3_H
 #define _LINUX_PLATFORM_DATA_WKUP_M3_H
 
+void wkup_m3_set_rtc_only_mode(void);
+
 struct wkup_m3_platform_data {
 	const char *reset_name;
 
-- 
1.7.5.4

