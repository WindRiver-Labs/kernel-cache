From 43a35b663b9a06e2449f1d412a079944c19a75f4 Mon Sep 17 00:00:00 2001
From: Darren Etheridge <detheridge@ti.com>
Date: Fri, 12 Dec 2014 16:02:32 +0200
Subject: [PATCH 1536/1587] drm/omap: fbdev: add a module option controlling
 num backbuffers allocated

Some software requires the use of the fbdev PAN ioctl (SGX driver in flip
mode for instance).  This commit adds a new kernel parameter:
omapdrm.num_fbdev_backbuffers=<int>
that can be used to specify how many buffers get allocated when the
omapdrm/fbdev driver gets initialized.  It defaults to 1 if it is not
specified which is the existing behavior.

Signed-off-by: Darren Etheridge <detheridge@ti.com>
Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
Signed-off-by: Jyri Sarha <jsarha@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/gpu/drm/omapdrm/omap_fbdev.c |   10 +++++++---
 1 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/omapdrm/omap_fbdev.c b/drivers/gpu/drm/omapdrm/omap_fbdev.c
index 3dfb6da..92c2df8 100644
--- a/drivers/gpu/drm/omapdrm/omap_fbdev.c
+++ b/drivers/gpu/drm/omapdrm/omap_fbdev.c
@@ -25,8 +25,11 @@
 #include <linux/suspend.h>
 
 MODULE_PARM_DESC(ywrap, "Enable ywrap scrolling (omap44xx and later, default 'y')");
+MODULE_PARM_DESC(num_fbdev_backbuffers, "Number of buffers to allocate, 1=single buffered, 2=double buffers, 3=triple buffered...");
 static bool ywrap_enabled = true;
+static int num_fbdev_backbuffers = 1;
 module_param_named(ywrap, ywrap_enabled, bool, 0644);
+module_param(num_fbdev_backbuffers, int, 0444);
 
 /*
  * fbdev funcs, to implement legacy fbdev interface on top of drm driver
@@ -154,15 +157,16 @@ static int omap_fbdev_create(struct drm_fb_helper *helper,
 	sizes->surface_bpp = 32;
 	sizes->surface_depth = 32;
 
-	DBG("create fbdev: %dx%d@%d (%dx%d)", sizes->surface_width,
+	DBG("create fbdev: %dx%d@%d (%dx%d)x%d", sizes->surface_width,
 			sizes->surface_height, sizes->surface_bpp,
-			sizes->fb_width, sizes->fb_height);
+			sizes->fb_width, sizes->fb_height,
+			num_fbdev_backbuffers);
 
 	mode_cmd.pixel_format = drm_mode_legacy_fb_format(sizes->surface_bpp,
 			sizes->surface_depth);
 
 	mode_cmd.width = sizes->surface_width;
-	mode_cmd.height = sizes->surface_height;
+	mode_cmd.height = sizes->surface_height * num_fbdev_backbuffers;
 
 	mode_cmd.pitches[0] = align_pitch(
 			mode_cmd.width * ((sizes->surface_bpp + 7) / 8),
-- 
1.7.5.4

