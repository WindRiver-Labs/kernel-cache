From f408a3aa8a9d9f9b0dd7115a880f0381602302bc Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Wed, 20 Nov 2013 17:01:22 -0600
Subject: [PATCH 0973/1587] CLK: TI: OMAP4: initialize IVA DPLL and associated
 output clocks

The IVA DPLL is not an essential DPLL for the functionality of a
bootloader and is usually not configured (e.g. older u-boots configure
it only if CONFIG_SYS_CLOCKS_ENABLE_ALL is enabled and u-boots newer
than 2014.01 do not even have an option), and this results in various
issues when trying to use a DSP or IVAHD, whose root clocks are derived
from this DPLL. Initialize the IVA DPLL at boot time to avoid any
functional issues caused when using either of these devices if the
DPLL is not locked. The DPLL will automatically transition into a
low-power stop mode when the associated output clocks are not utilized
or gated automatically.

The reset values of the dividers M4 & M5 are identical to each other,
but are different at each OPP. The reset values also may not match a
specific OPP. So, the derived output clocks from the IVA DPLL have to
be initialized as well (OPP100 values chosen currently) to avoid
initializing these divider outputs to incorrect frequencies.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/clk/ti/clk-44xx.c |   35 +++++++++++++++++++++++++++++++++++
 1 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/drivers/clk/ti/clk-44xx.c b/drivers/clk/ti/clk-44xx.c
index 02517a8..baa66de 100644
--- a/drivers/clk/ti/clk-44xx.c
+++ b/drivers/clk/ti/clk-44xx.c
@@ -31,6 +31,17 @@
  */
 #define OMAP4_DPLL_USB_DEFFREQ				960000000
 
+/*
+ * OMAP4 IVA DPLL frequency settings. The below values are defined
+ * based on the OPP100 values according to OMAP4430 ES2.x Public TRM
+ * version AO, section "3.6.3.8.7 DPLL_IVA Preferred Settings". The
+ * DPLL locked frequency is 1862.4 MHz (value for DPLL_IVA_X2_CLK),
+ * so the DPLL_IVA_DEFFREQ is half of this value.
+ */
+#define OMAP4_DPLL_IVA_DEFFREQ				931200000
+#define OMAP4_DSP_ROOT_CLK_NOMFREQ			465600000
+#define OMAP4_IVAHD_ROOT_CLK_NOMFREQ			266100000
+
 static struct ti_dt_clk omap44xx_clks[] = {
 	DT_CLK(NULL, "extalt_clkin_ck", "extalt_clkin_ck"),
 	DT_CLK(NULL, "pad_clks_src_ck", "pad_clks_src_ck"),
@@ -282,6 +293,7 @@ int __init omap4xxx_dt_clk_init(void)
 {
 	int rc;
 	struct clk *abe_dpll_ref, *abe_dpll, *sys_32k_ck, *usb_dpll;
+	struct clk *iva_dpll, *iva_m4x2_dpll, *iva_m5x2_dpll;
 
 	ti_dt_clocks_register(omap44xx_clks);
 
@@ -311,5 +323,28 @@ int __init omap4xxx_dt_clk_init(void)
 	if (rc)
 		pr_err("%s: failed to configure ABE DPLL!\n", __func__);
 
+	/*
+	 * Lock the IVA DPLL and its derivative clocks so that the DSP and
+	 * IVA processors are running at nominal operating points rather
+	 * than at a bypass clock rate or at a misconfigured output rate.
+	 */
+	iva_dpll = clk_get_sys(NULL, "dpll_iva_ck");
+	rc = clk_set_rate(iva_dpll, OMAP4_DPLL_IVA_DEFFREQ);
+	if (!rc) {
+		iva_m4x2_dpll = clk_get_sys(NULL, "dpll_iva_m4x2_ck");
+		rc = clk_set_rate(iva_m4x2_dpll, OMAP4_DSP_ROOT_CLK_NOMFREQ);
+		if (rc)
+			pr_err("%s: failed to configure IVA DPLL m4x2 divider!\n",
+			       __func__);
+
+		iva_m5x2_dpll = clk_get_sys(NULL, "dpll_iva_m5x2_ck");
+		rc = clk_set_rate(iva_m5x2_dpll, OMAP4_IVAHD_ROOT_CLK_NOMFREQ);
+		if (rc)
+			pr_err("%s: failed to configure IVA DPLL m5x2 divider!\n",
+			       __func__);
+	} else {
+		pr_err("%s: failed to configure IVA DPLL!\n", __func__);
+	}
+
 	return 0;
 }
-- 
1.7.5.4

