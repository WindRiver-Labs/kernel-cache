From a3dd53771348844e71170a12e1318f989c2ee997 Mon Sep 17 00:00:00 2001
From: Keerthy <j-keerthy@ti.com>
Date: Thu, 11 Sep 2014 15:08:17 +0530
Subject: [PATCH 1208/1587] ARM: OMAP4: PRM: Add nr_irqs check to extend
 support to single core SOCs.

Add nr_irqs check to extend support to single core SOCs.

Signed-off-by: Keerthy <j-keerthy@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/prm44xx.c |   32 ++++++++++++++++++++++----------
 1 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/arch/arm/mach-omap2/prm44xx.c b/arch/arm/mach-omap2/prm44xx.c
index d2f9c73..7ed0949 100644
--- a/arch/arm/mach-omap2/prm44xx.c
+++ b/arch/arm/mach-omap2/prm44xx.c
@@ -209,8 +209,11 @@ static inline u32 _read_pending_irq_reg(u16 irqen_offs, u16 irqst_offs)
  */
 void omap44xx_prm_read_pending_irqs(unsigned long *events)
 {
-	events[0] = _read_pending_irq_reg(OMAP4_PRM_IRQENABLE_MPU_OFFSET,
-					  OMAP4_PRM_IRQSTATUS_MPU_OFFSET);
+	events[0] = _read_pending_irq_reg(omap4_prcm_irq_setup.mask,
+					  omap4_prcm_irq_setup.ack);
+
+	if (omap4_prcm_irq_setup.nr_regs == 1)
+		return;
 
 	events[1] = _read_pending_irq_reg(OMAP4_PRM_IRQENABLE_MPU_2_OFFSET,
 					  OMAP4_PRM_IRQSTATUS_MPU_2_OFFSET);
@@ -245,15 +248,20 @@ void omap44xx_prm_save_and_clear_irqen(u32 *saved_mask)
 {
 	saved_mask[0] =
 		omap4_prm_read_inst_reg(OMAP4430_PRM_OCP_SOCKET_INST,
-					OMAP4_PRM_IRQENABLE_MPU_OFFSET);
-	saved_mask[1] =
-		omap4_prm_read_inst_reg(OMAP4430_PRM_OCP_SOCKET_INST,
-					OMAP4_PRM_IRQENABLE_MPU_2_OFFSET);
+					omap4_prcm_irq_setup.mask);
 
 	omap4_prm_write_inst_reg(0, OMAP4430_PRM_OCP_SOCKET_INST,
-				 OMAP4_PRM_IRQENABLE_MPU_OFFSET);
-	omap4_prm_write_inst_reg(0, OMAP4430_PRM_OCP_SOCKET_INST,
-				 OMAP4_PRM_IRQENABLE_MPU_2_OFFSET);
+				 omap4_prcm_irq_setup.mask);
+
+	if (omap4_prcm_irq_setup.nr_regs == 2) {
+		saved_mask[1] =
+			omap4_prm_read_inst_reg(OMAP4430_PRM_OCP_SOCKET_INST,
+				OMAP4_PRM_IRQENABLE_MPU_2_OFFSET);
+
+			omap4_prm_write_inst_reg(0,
+				OMAP4430_PRM_OCP_SOCKET_INST,
+				OMAP4_PRM_IRQENABLE_MPU_2_OFFSET);
+	}
 
 	/* OCP barrier */
 	omap4_prm_read_inst_reg(OMAP4430_PRM_OCP_SOCKET_INST,
@@ -273,7 +281,11 @@ void omap44xx_prm_save_and_clear_irqen(u32 *saved_mask)
 void omap44xx_prm_restore_irqen(u32 *saved_mask)
 {
 	omap4_prm_write_inst_reg(saved_mask[0], OMAP4430_PRM_OCP_SOCKET_INST,
-				 OMAP4_PRM_IRQENABLE_MPU_OFFSET);
+				 omap4_prcm_irq_setup.mask);
+
+	if (omap4_prcm_irq_setup.nr_regs == 1)
+		return;
+
 	omap4_prm_write_inst_reg(saved_mask[1], OMAP4430_PRM_OCP_SOCKET_INST,
 				 OMAP4_PRM_IRQENABLE_MPU_2_OFFSET);
 }
-- 
1.7.5.4

