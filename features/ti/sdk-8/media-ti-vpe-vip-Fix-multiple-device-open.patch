From abe0a9aac6deb4f45a2eb36e6ec38ee6f76f09d8 Mon Sep 17 00:00:00 2001
From: Benoit Parrot <bparrot@ti.com>
Date: Mon, 10 Nov 2014 12:14:15 -0600
Subject: [PATCH 1324/1587] media: ti-vpe: vip: Fix multiple device open

v4l2-compliance: Multiple open test for VIP fails.

Signed-off-by: Benoit Parrot <bparrot@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/media/platform/ti-vpe/vip.c |   89 ++++++++++++++++++++++-------------
 drivers/media/platform/ti-vpe/vip.h |    1 -
 2 files changed, 56 insertions(+), 34 deletions(-)

diff --git a/drivers/media/platform/ti-vpe/vip.c b/drivers/media/platform/ti-vpe/vip.c
index 890a91c..fcf79e9 100644
--- a/drivers/media/platform/ti-vpe/vip.c
+++ b/drivers/media/platform/ti-vpe/vip.c
@@ -867,9 +867,10 @@ static const struct dfn_holder s_dfn = {
 /*
  * Return the vip_stream structure for a given struct file
  */
-static struct vip_stream *file2stream(struct file *file)
+static inline struct vip_stream *file2stream(struct file *file)
 {
-	return container_of(file->private_data, struct vip_stream, fh);
+	return video_drvdata(file);
+
 }
 
 /*
@@ -1822,35 +1823,54 @@ int vip_open(struct file *file)
 	struct vip_stream *stream = video_drvdata(file);
 	struct vip_port *port = stream->port;
 	struct vip_dev *dev = port->dev;
-	int ret;
+	struct v4l2_fh *fh = kzalloc(sizeof(*fh), GFP_KERNEL);
+	int ret = 0;
 
-	if (vb2_is_busy(&stream->vb_vidq)) {
-		vip_err(dev, "%s queue busy\n", __func__);
-		return -EBUSY;
-	}
+	vip_dbg(2, dev, "vip_open\n");
 
-	ret = vip_init_port(port);
-	if (ret)
-		goto done;
+	file->private_data = fh;
+	if (fh == NULL)
+		return -ENOMEM;
 
-	stream->width = 1280;
-	stream->height = 720;
-	stream->sizeimage = stream->width * stream->height *
-			(port->fmt->vpdma_fmt[0]->depth + (port->fmt->coplanar ?
-				port->fmt->vpdma_fmt[1]->depth : 0)) >> 3;
-	stream->sup_field = V4L2_FIELD_NONE;
-	port->c_rect.width = stream->width;
-	port->c_rect.height = stream->height;
+	mutex_lock(&dev->mutex);
 
-	v4l2_fh_init(&stream->fh, video_devdata(file));
-	file->private_data = &stream->fh;
+	v4l2_fh_init(fh, video_devdata(file));
+	v4l2_fh_add(fh);
 
-	v4l2_fh_add(&stream->fh);
-	vip_dbg(1, dev, "Created stream instance %p\n", stream);
+	/*
+	 * If this is the first open file.
+	 * Then initialize hw module.
+	 */
+	if (v4l2_fh_is_singular_file(file)) {
+		if (vip_init_port(port)) {
+			goto free_fh;
+			ret = -ENODEV;
+		}
+		stream->width = 1280;
+		stream->height = 720;
+		stream->sizeimage = stream->width * stream->height *
+			(port->fmt->vpdma_fmt[0]->depth +
+			(port->fmt->coplanar ?
+				port->fmt->vpdma_fmt[1]->depth : 0)) >> 3;
+		stream->bytesperline = round_up((stream->width *
+					port->fmt->vpdma_fmt[0]->depth) >> 3,
+					1 << L_ALIGN);
+		stream->sup_field = V4L2_FIELD_NONE;
+		port->c_rect.width = stream->width;
+		port->c_rect.height = stream->height;
+		vip_dbg(1, dev, "Created stream instance %p\n", stream);
+	}
 
+	mutex_unlock(&dev->mutex);
 	return 0;
 
-done:
+free_fh:
+	mutex_unlock(&dev->mutex);
+	if (fh) {
+		v4l2_fh_del(fh);
+		v4l2_fh_exit(fh);
+		kfree(fh);
+	}
 	return ret;
 }
 EXPORT_SYMBOL(vip_open);
@@ -1862,20 +1882,23 @@ int vip_release(struct file *file)
 	struct vip_dev *dev = port->dev;
 	struct vb2_queue *q = &stream->vb_vidq;
 
-	vip_dbg(1, dev, "Releasing stream instance %p\n", stream);
+	vip_dbg(2, dev, "vip_release\n");
 
-	mutex_lock(&dev->mutex);
-
-	vip_stop_streaming(q);
-	vip_release_port(stream->port);
+	/*
+	 * If this is the last open file.
+	 * Then de-initialize hw module.
+	 */
+	if (v4l2_fh_is_singular_file(file)) {
+		mutex_lock(&dev->mutex);
 
-	v4l2_fh_del(&stream->fh);
-	v4l2_fh_exit(&stream->fh);
-	vb2_queue_release(q);
+		vip_stop_streaming(q);
+		vip_release_port(stream->port);
 
-	mutex_unlock(&dev->mutex);
+		mutex_unlock(&dev->mutex);
+		vip_dbg(1, dev, "Releasing stream instance %p\n", stream);
+	}
 
-	return 0;
+	return vb2_fop_release(file);
 }
 EXPORT_SYMBOL(vip_release);
 
diff --git a/drivers/media/platform/ti-vpe/vip.h b/drivers/media/platform/ti-vpe/vip.h
index 8b9b7b9..d50bcc4 100644
--- a/drivers/media/platform/ti-vpe/vip.h
+++ b/drivers/media/platform/ti-vpe/vip.h
@@ -146,7 +146,6 @@ struct vip_port {
  * port.  The vip_stream structure holds per-stream data.
  */
 struct vip_stream {
-	struct v4l2_fh		fh;
 	struct video_device	*vfd;
 	struct vip_port		*port;
 	int			stream_id;
-- 
1.7.5.4

