From 8865cf3347f71d2a87611629b1b84fb2a506a60e Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Thu, 11 Jul 2013 17:37:59 -0500
Subject: [PATCH 1011/1587] rpmsg: reset the virtio device after del_vqs

The virtio device configuration information for the rpmsg virtio
devices is usually present in a shared memory accessible to the
remote processor when it is running. The rpmsg_remove function
stops a remote processor and frees up all the resources associated
with the remote processor including memory. The remoteproc core
switches to a cached resource table and reconfigures the table
pointer used by virtio config functions once the remote processor
is stopped.

The virtio core touches the virtio device status bits during the
probe and remove of a virtio driver. The switching to the cached
resource table causes a loss of the reset status in the virtio
device configuration, and triggers a WARN_ON in virtio_dev_remove
function. Reset the status later within the rpmsg_remove function
to fix this.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/rpmsg/virtio_rpmsg_bus.c |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/drivers/rpmsg/virtio_rpmsg_bus.c b/drivers/rpmsg/virtio_rpmsg_bus.c
index 0c1b2e6..e5a4f99 100644
--- a/drivers/rpmsg/virtio_rpmsg_bus.c
+++ b/drivers/rpmsg/virtio_rpmsg_bus.c
@@ -1063,8 +1063,6 @@ static void rpmsg_remove(struct virtio_device *vdev)
 	size_t total_buf_space = vrp->num_bufs * RPMSG_BUF_SIZE;
 	int ret;
 
-	vdev->config->reset(vdev);
-
 	ret = device_for_each_child(&vdev->dev, NULL, rpmsg_remove_device);
 	if (ret)
 		dev_warn(&vdev->dev, "can't remove rpmsg device: %d\n", ret);
@@ -1075,6 +1073,7 @@ static void rpmsg_remove(struct virtio_device *vdev)
 	idr_destroy(&vrp->endpoints);
 
 	vdev->config->del_vqs(vrp->vdev);
+	vdev->config->reset(vdev);
 
 	dma_free_coherent(vdev->dev.parent->parent, total_buf_space,
 			  vrp->rbufs, vrp->bufs_dma);
-- 
1.7.5.4

