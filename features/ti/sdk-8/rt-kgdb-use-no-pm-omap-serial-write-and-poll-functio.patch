From 0a79cf610d7f9b55c731b92f9907e640d5bd66c6 Mon Sep 17 00:00:00 2001
From: czou <cao.zou@windriver.com>
Date: Thu, 21 May 2015 05:00:59 +0000
Subject: [PATCH] rt/kgdb: use no pm omap serial write and poll functions

KDBG can't support omap serial pm_runtime,there are a lot of
calltraces:
BUG: sleeping function called from invalid context at
kernel/locking/rtmutex.c:
in_atomic(): 1, irqs_disabled(): 128, pid: 550, name: sh
Preemption disabled at:[<  (null)>]   (null)

CPU: 0 PID: 550 Comm: sh Tainted: G           O
[<c0016ab0>] (unwind_backtrace) from [<c0013164>] (show_stack+0x20/0x24)
[<c0013164>] (show_stack) from [<c0856758>] (dump_stack+0x24/0x28)
[<c0856758>] (dump_stack) from [<c0069080>] (__might_sleep+0x108/0x160)
[<c0069080>] (__might_sleep) from [<c085bf84>] (rt_spin_lock+0x2c/0x6c)
[<c085bf84>] (rt_spin_lock) from [<c04abb10>]
(__pm_runtime_resume+0x64/0x98)
[<c04abb10>] (__pm_runtime_resume) from [<c046be84>]
(serial_omap_poll_get_char+0x24/0x84)
[<c046be84>] (serial_omap_poll_get_char) from [<c046295c>]
(uart_poll_get_char+0x44/0x50)
[<c046295c>] (uart_poll_get_char) from [<c046f578>]
(kgdboc_get_char+0x98/0xac)
[<c046f578>] (kgdboc_get_char) from [<c00b0728>]
(dbg_io_get_char+0x28/0x64)
[<c00b0728>] (dbg_io_get_char) from [<c00b0848>]
(gdbstub_read_wait+0x4c/0x94)
[<c00b0848>] (gdbstub_read_wait) from [<c00b10f8>]
(gdb_serial_stub+0xd4/0x104c)
[<c00b10f8>] (gdb_serial_stub) from [<c00b00a0>]
(kgdb_handle_exception+0x310/0x7a8)
[<c00b00a0>] (kgdb_handle_exception) from [<c0015c20>]
(kgdb_compiled_brk_fn+0x38/0x40)
[<c0015c20>] (kgdb_compiled_brk_fn) from [<c0008304>]
(do_undefinstr+0x104/0x1dc)
[<c0008304>] (do_undefinstr) from [<c0013e0c>]
(__und_svc_finish+0x0/0x14)
Exception stack(0xdbab7e78 to 0xdbab7ec0)

Signed-off-by: czou <cao.zou@windriver.com>
---
 drivers/tty/serial/omap-serial.c |   81 ++++++++++++++++++++++++++++++++++++-
 1 files changed, 78 insertions(+), 3 deletions(-)

diff --git a/drivers/tty/serial/omap-serial.c b/drivers/tty/serial/omap-serial.c
index 783a2a3..7332422 100644
--- a/drivers/tty/serial/omap-serial.c
+++ b/drivers/tty/serial/omap-serial.c
@@ -43,6 +43,7 @@
 #include <linux/gpio.h>
 #include <linux/of_gpio.h>
 #include <linux/platform_data/serial-omap.h>
+#include <linux/kgdb.h>
 
 #include <dt-bindings/gpio/gpio.h>
 
@@ -1197,7 +1198,8 @@ static inline void wait_for_xmitr(struct uart_omap_port *up)
 
 #ifdef CONFIG_CONSOLE_POLL
 
-static void serial_omap_poll_put_char(struct uart_port *port, unsigned char ch)
+static void
+serial_omap_poll_pm_put_char(struct uart_port *port, unsigned char ch)
 {
 	struct uart_omap_port *up = to_uart_omap_port(port);
 
@@ -1208,7 +1210,25 @@ static void serial_omap_poll_put_char(struct uart_port *port, unsigned char ch)
 	pm_runtime_put_autosuspend(up->dev);
 }
 
-static int serial_omap_poll_get_char(struct uart_port *port)
+static void
+serial_omap_poll_dec_put_char(struct uart_port *port, unsigned char ch)
+{
+	struct uart_omap_port *up = to_uart_omap_port(port);
+
+	wait_for_xmitr(up);
+	serial_out(up, UART_TX, ch);
+}
+
+static void
+serial_omap_poll_put_char(struct uart_port *port, unsigned char ch)
+{
+	if (kgdb_connected)
+		serial_omap_poll_dec_put_char(port, ch);
+	else
+		serial_omap_poll_pm_put_char(port, ch);
+}
+
+static int serial_omap_poll_pm_get_char(struct uart_port *port)
 {
 	struct uart_omap_port *up = to_uart_omap_port(port);
 	unsigned int status;
@@ -1229,6 +1249,29 @@ out:
 	return status;
 }
 
+static int serial_omap_poll_dec_get_char(struct uart_port *port)
+{
+	struct uart_omap_port *up = to_uart_omap_port(port);
+	unsigned int status;
+
+	status = serial_in(up, UART_LSR);
+	if (!(status & UART_LSR_DR))
+		return NO_POLL_CHAR;
+
+	return serial_in(up, UART_RX);
+}
+
+static int serial_omap_poll_get_char(struct uart_port *port)
+{
+	int status;
+
+	if (kgdb_connected)
+		status = serial_omap_poll_dec_get_char(port);
+	else
+		status = serial_omap_poll_pm_get_char(port);
+
+	return status;
+}
 #endif /* CONFIG_CONSOLE_POLL */
 
 #ifdef CONFIG_SERIAL_OMAP_CONSOLE
@@ -1245,8 +1288,29 @@ static void serial_omap_console_putchar(struct uart_port *port, int ch)
 	serial_out(up, UART_TX, ch);
 }
 
+
+
 static void
-serial_omap_console_write(struct console *co, const char *s,
+serial_omap_console_dec_write(struct console *co, const char *s,
+		unsigned int count)
+{
+	struct uart_omap_port *up = serial_omap_console_ports[co->index];
+	unsigned int ier;
+
+	ier = serial_in(up, UART_IER);
+	serial_out(up, UART_IER, 0);
+
+	uart_console_write(&up->port, s, count, serial_omap_console_putchar);
+
+	wait_for_xmitr(up);
+	serial_out(up, UART_IER, ier);
+
+	if (up->msr_saved_flags)
+		check_modem_status(up);
+}
+
+static void
+serial_omap_console_pm_write(struct console *co, const char *s,
 		unsigned int count)
 {
 	struct uart_omap_port *up = serial_omap_console_ports[co->index];
@@ -1295,6 +1359,17 @@ serial_omap_console_write(struct console *co, const char *s,
 	local_irq_restore(flags);
 }
 
+static void
+serial_omap_console_write(struct console *co, const char *s,
+		unsigned int count)
+{
+	if (kgdb_connected)
+		serial_omap_console_dec_write(co, s, count);
+	else
+		serial_omap_console_pm_write(co, s, count);
+
+}
+
 static int __init
 serial_omap_console_setup(struct console *co, char *options)
 {
-- 
1.7.5.4

