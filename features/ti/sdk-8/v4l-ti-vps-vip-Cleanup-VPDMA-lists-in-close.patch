From c6fe2595a9ad1a63f95e968b91022366a3ed882b Mon Sep 17 00:00:00 2001
From: Benoit Parrot <bparrot@ti.com>
Date: Thu, 20 Nov 2014 17:29:06 -0600
Subject: [PATCH 1451/1587] v4l: ti-vps: vip: Cleanup VPDMA lists in close

VPDMA lists needs to be cleaned up to release all the resources
and clear the internal FSM. This is necessay for robustness of the
driver, upon multiple open/close, driver should not keep the VPDMA
hardware in busy state.

Also, maintain a map of all the channels being used by the driver
so that while closing the stream, driver can post abort channel for
all the channels used by the driver since opening.

Mark the channel number as used when before vpdma_add_out_dtd is called
and reinitialize the channel map after cleanup.

Signed-off-by: Nikhil Devshatwar <nikhil.nd@ti.com>
Signed-off-by: Benoit Parrot <bparrot@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/media/platform/ti-vpe/vip.c |   24 ++++++++++++++++++++++++
 drivers/media/platform/ti-vpe/vip.h |    2 ++
 2 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/drivers/media/platform/ti-vpe/vip.c b/drivers/media/platform/ti-vpe/vip.c
index 3f8ce88..2e10782 100644
--- a/drivers/media/platform/ti-vpe/vip.c
+++ b/drivers/media/platform/ti-vpe/vip.c
@@ -1000,6 +1000,12 @@ static int add_out_dtd(struct vip_stream *stream, int srce_type)
 		max_height = MAX_OUT_HEIGHT_REG2;
 	}
 
+	/* Mark this channel to be cleared while cleaning up resources
+	 * This will make sure that an abort descriptor for this channel
+	 * would be submitted to VPDMA causing any ongoing  transaction to be
+	 * aborted and cleanup the VPDMA FSM for this channel */
+	dev->vpdma_channels[channel] = 1;
+
 	vpdma_rawchan_add_out_dtd(&dev->desc_list, c_rect->width, c_rect,
 		fmt->vpdma_fmt[plane], dma_addr, max_width, max_height,
 		channel, flags);
@@ -2061,6 +2067,24 @@ done:
 
 static void vip_release_port(struct vip_port *port)
 {
+	struct vip_dev *dev = port->dev;
+	int ch, size = 0;
+
+	/* Create a list of channels to be cleared */
+	for (ch = 0; ch < VPDMA_MAX_CHANNELS; ch++) {
+		if (dev->vpdma_channels[ch] == 1) {
+			dev->vpdma_channels[size++] = ch;
+			vip_dbg(2, dev, "Clear channel no: %d\n", ch);
+		}
+	}
+
+	/* Clear all the used channels for the list */
+	vpdma_list_cleanup(dev->shared->vpdma, dev->slice_id,
+		dev->vpdma_channels, size);
+
+	for (ch = 0; ch < VPDMA_MAX_CHANNELS; ch++)
+		dev->vpdma_channels[ch] = 0;
+
 	if (--port->num_streams == 0)
 		vip_release_dev(port->dev);
 }
diff --git a/drivers/media/platform/ti-vpe/vip.h b/drivers/media/platform/ti-vpe/vip.h
index 4cf39c3..3d66276 100644
--- a/drivers/media/platform/ti-vpe/vip.h
+++ b/drivers/media/platform/ti-vpe/vip.h
@@ -127,6 +127,8 @@ struct vip_dev {
 	struct vpdma_desc_list	desc_list;	/* DMA descriptor list */
 	struct vpdma_dtd	*write_desc;
 	void			*desc_next;	/* next unused desc_list addr */
+	/* Maintain a list of used channels - Needed for VPDMA cleanup */
+	int			vpdma_channels[VPDMA_MAX_CHANNELS];
 	struct list_head	vip_bufs;	/* vip_bufs to be DMAed */
 	struct vb2_alloc_ctx	*alloc_ctx;
 	struct vip_port		*ports[VIP_NUM_PORTS];
-- 
1.7.5.4

