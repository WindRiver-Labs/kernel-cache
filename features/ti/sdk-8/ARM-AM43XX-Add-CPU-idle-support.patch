From b3735c930795695e8a272a10f80a815c96cc5959 Mon Sep 17 00:00:00 2001
From: Russ Dill <russ.dill@ti.com>
Date: Fri, 25 Jul 2014 17:52:46 -0500
Subject: [PATCH 0945/1587] ARM: AM43XX: Add CPU idle support

This patch adds support for CPU idle on am437x. It has been tested on
the ePOS EVM. Currently it just gates the MPU clockdomain.

Before:
(0x41) am437x_epos.VDD_MPU    950.00mV *  30.100mA =  28.595mW

After:
(0x41) am437x_epos.VDD_MPU    951.25mV *  2.6500mA =  2.5208mW

Future CPU idle changes could include powering off the MPU clock domain,
putting DDR into self refresh, putting the MPU PLL into bypass, and
disabling the EMIF.

This is RFC as I haven't measured latency yet. Initially I had thought that
turning off the NMI bit in the SCU registers suddenly made this work, however
it turns out it was a rebase on the ti-linux-3.12 branch. I'm not sure
which patch it was that fixed the issue.

Signed-off-by: Russ Dill <Russ.Dill@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/Makefile      |    1 +
 arch/arm/mach-omap2/cpuidle43xx.c |   53 +++++++++++++++++++++++++++++++++++++
 arch/arm/mach-omap2/pm.h          |    8 +++++-
 arch/arm/mach-omap2/pm33xx.c      |    5 +++-
 4 files changed, 65 insertions(+), 2 deletions(-)
 create mode 100644 arch/arm/mach-omap2/cpuidle43xx.c

diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index 65784fa..11470ba 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -109,6 +109,7 @@ endif
 
 ifeq ($(CONFIG_CPU_IDLE),y)
 obj-$(CONFIG_SOC_AM33XX)                += cpuidle33xx.o
+obj-$(CONFIG_SOC_AM43XX)                += cpuidle43xx.o
 obj-$(CONFIG_ARCH_OMAP3)                += cpuidle34xx.o
 obj-$(CONFIG_ARCH_OMAP4)                += cpuidle44xx.o
 endif
diff --git a/arch/arm/mach-omap2/cpuidle43xx.c b/arch/arm/mach-omap2/cpuidle43xx.c
new file mode 100644
index 0000000..213e3cd
--- /dev/null
+++ b/arch/arm/mach-omap2/cpuidle43xx.c
@@ -0,0 +1,53 @@
+/*
+ * AM43XX CPU idle Routines
+ *
+ * Copyright (C) 2014 Texas Instruments, Inc.
+ * Russ Dill <russ.dill@ti.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/cpuidle.h>
+#include <linux/io.h>
+#include <asm/smp_scu.h>
+#include <asm/cpuidle.h>
+
+static void __iomem *scu_base;
+
+static int am43xx_enter_idle(struct cpuidle_device *dev,
+			     struct cpuidle_driver *drv, int index)
+{
+	scu_power_mode(scu_base, SCU_PM_DORMANT);
+	wfi();
+	scu_power_mode(scu_base, SCU_PM_NORMAL);
+
+	return index;
+}
+
+static struct cpuidle_driver am437x_idle_driver = {
+	.name		= "am437x_idle",
+	.states		= {
+		ARM_CPUIDLE_WFI_STATE,
+		{
+			.exit_latency = 100,
+			.target_residency = 200,
+			.power_usage = 500,
+			.flags = CPUIDLE_FLAG_TIME_VALID,
+			.enter = am43xx_enter_idle,
+			.name = "C1",
+			.desc = "Bypass MPU PLL",
+		},
+	},
+	.state_count	= 2,
+};
+
+int am437x_idle_init(void)
+{
+	scu_base = ioremap(scu_a9_get_base(), SZ_256);
+	if (!scu_base)
+		return -ENOMEM;
+
+	return cpuidle_register(&am437x_idle_driver, NULL);
+}
diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 447350e..1f9c211 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -21,7 +21,8 @@ extern u32 wakeup_timer_milliseconds;
 #endif
 
 #ifdef CONFIG_CPU_IDLE
-int __init am33xx_idle_init(bool ddr3);
+int am33xx_idle_init(bool ddr3);
+int am437x_idle_init(void);
 extern int __init omap3_idle_init(void);
 extern int __init omap4_idle_init(void);
 #else
@@ -30,6 +31,11 @@ static inline int am33xx_idle_init(bool ddr3)
 	return 0;
 }
 
+static inline int am437x_idle_init(void)
+{
+	return 0;
+}
+
 static inline int omap3_idle_init(void)
 {
 	return 0;
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 6ed2fcfc..d8cf143 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -295,7 +295,10 @@ static void am33xx_m3_ready_cb(void)
 			am33xx_pm->ver);
 	}
 
-	am33xx_idle_init(susp_params.wfi_flags & WFI_MEM_TYPE_DDR3);
+	if (soc_is_am33xx())
+		am33xx_idle_init(susp_params.wfi_flags & WFI_MEM_TYPE_DDR3);
+	else if (soc_is_am437x())
+		am437x_idle_init();
 
 #ifdef CONFIG_SUSPEND
 	suspend_set_ops(&am33xx_pm_ops);
-- 
1.7.5.4

