From 678e627f758e8f3583cb5e8b49156a4b7b8b0023 Mon Sep 17 00:00:00 2001
From: Roger Quadros <rogerq@ti.com>
Date: Thu, 14 Aug 2014 17:32:05 +0300
Subject: [PATCH 0981/1587] mtd: nand: omap2: Make us work even if
 CONFIG_MTD_NAND_OMAP_BCH is module

If CONFIG_MTD_NAND_OMAP_BCH is defined as module then things break
with the following message even if ELM(BCH) module is loaded.

[   18.926397] nand: error: CONFIG_MTD_NAND_OMAP_BCH not enabled

Fix this issue.

Signed-off-by: Roger Quadros <rogerq@ti.com>
Tested-by: Yan Liu <yan-liu@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/mtd/nand/omap2.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/mtd/nand/omap2.c b/drivers/mtd/nand/omap2.c
index ce7a4cf..2c06034 100644
--- a/drivers/mtd/nand/omap2.c
+++ b/drivers/mtd/nand/omap2.c
@@ -136,7 +136,7 @@
 
 #define BADBLOCK_MARKER_LENGTH		2
 
-#ifdef CONFIG_MTD_NAND_OMAP_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_OMAP_BCH)
 static u_char bch16_vector[] = {0xf5, 0x24, 0x1c, 0xd0, 0x61, 0xb3, 0xf1, 0x55,
 				0x2e, 0x2c, 0x86, 0xa3, 0xed, 0x36, 0x1b, 0x78,
 				0x48, 0x76, 0xa9, 0x3b, 0x97, 0xd1, 0x7a, 0x93,
@@ -1332,7 +1332,7 @@ static int erased_sector_bitflips(u_char *data, u_char *oob,
 	return flip_bits;
 }
 
-#ifdef CONFIG_MTD_NAND_OMAP_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_OMAP_BCH)
 /**
  * omap_elm_correct_data - corrects page data area in case error reported
  * @mtd:	MTD device structure
@@ -1830,7 +1830,7 @@ static int omap_nand_probe(struct platform_device *pdev)
 		break;
 
 	case OMAP_ECC_BCH4_CODE_HW_DETECTION_SW:
-#ifdef CONFIG_MTD_NAND_ECC_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_ECC_BCH)
 		pr_info("nand: using OMAP_ECC_BCH4_CODE_HW_DETECTION_SW\n");
 		nand_chip->ecc.mode		= NAND_ECC_HW;
 		nand_chip->ecc.size		= 512;
@@ -1869,7 +1869,7 @@ static int omap_nand_probe(struct platform_device *pdev)
 #endif
 
 	case OMAP_ECC_BCH4_CODE_HW:
-#ifdef CONFIG_MTD_NAND_OMAP_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_OMAP_BCH)
 		pr_info("nand: using OMAP_ECC_BCH4_CODE_HW ECC scheme\n");
 		nand_chip->ecc.mode		= NAND_ECC_HW;
 		nand_chip->ecc.size		= 512;
@@ -1945,7 +1945,7 @@ static int omap_nand_probe(struct platform_device *pdev)
 #endif
 
 	case OMAP_ECC_BCH8_CODE_HW:
-#ifdef CONFIG_MTD_NAND_OMAP_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_OMAP_BCH)
 		pr_info("nand: using OMAP_ECC_BCH8_CODE_HW ECC scheme\n");
 		nand_chip->ecc.mode		= NAND_ECC_HW;
 		nand_chip->ecc.size		= 512;
@@ -1981,7 +1981,7 @@ static int omap_nand_probe(struct platform_device *pdev)
 #endif
 
 	case OMAP_ECC_BCH16_CODE_HW:
-#ifdef CONFIG_MTD_NAND_OMAP_BCH
+#if IS_ENABLED(CONFIG_MTD_NAND_OMAP_BCH)
 		pr_info("using OMAP_ECC_BCH16_CODE_HW ECC scheme\n");
 		nand_chip->ecc.mode		= NAND_ECC_HW;
 		nand_chip->ecc.size		= 512;
-- 
1.7.5.4

