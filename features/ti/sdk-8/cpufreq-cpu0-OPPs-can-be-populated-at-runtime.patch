From f0fe1de5f2a81d80b5ec395436ce06544e08957c Mon Sep 17 00:00:00 2001
From: Viresh Kumar <viresh.kumar@linaro.org>
Date: Wed, 2 Jul 2014 09:33:23 +0530
Subject: [PATCH 0843/1587] cpufreq: cpu0: OPPs can be populated at runtime

commit 1bf8cc3d017575a38d4361f56ccc0a670a16bcd9 upstream

OPPs can be populated statically, via DT, or added at run time with
dev_pm_opp_add().

While this driver handles the first case correctly, it would fail to populate
OPPs added at runtime. Because call to of_init_opp_table() would fail as there
are no OPPs in DT and probe will return early.

To fix this, remove error checking and call dev_pm_opp_init_cpufreq_table()
unconditionally.

Update bindings as well.

Suggested-by: Stephen Boyd <sboyd@codeaurora.org>
Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
[d-gerlach@ti.com: Modified to apply after voltage notifier series]
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
---
 .../devicetree/bindings/cpufreq/cpufreq-cpu0.txt   |    3 +--
 drivers/cpufreq/cpufreq-cpu0.c                     |   11 ++++++-----
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/Documentation/devicetree/bindings/cpufreq/cpufreq-cpu0.txt b/Documentation/devicetree/bindings/cpufreq/cpufreq-cpu0.txt
index f055515..0244dee 100644
--- a/Documentation/devicetree/bindings/cpufreq/cpufreq-cpu0.txt
+++ b/Documentation/devicetree/bindings/cpufreq/cpufreq-cpu0.txt
@@ -8,8 +8,7 @@ Both required and optional properties listed below must be defined
 under node /cpus/cpu@0.
 
 Required properties:
-- operating-points: Refer to Documentation/devicetree/bindings/power/opp.txt
-  for details
+- None
 
 Optional properties:
 - clock-latency: Specify the possible maximum transition latency for clock,
diff --git a/drivers/cpufreq/cpufreq-cpu0.c b/drivers/cpufreq/cpufreq-cpu0.c
index 147f831..bd9498d 100644
--- a/drivers/cpufreq/cpufreq-cpu0.c
+++ b/drivers/cpufreq/cpufreq-cpu0.c
@@ -89,11 +89,12 @@ static int cpu0_cpufreq_probe(struct platform_device *pdev)
 		}
 
 		np = of_node_get(cpu_dev->of_node);
-		ret = of_init_opp_table(cpu_dev);
-		if (ret) {
-			pr_err("failed to init OPP table: %d\n", ret);
-			return ret;
-		}
+
+		/*
+		 * OPPs might be populated at runtime,
+		 * don't check for error here
+		 */
+		of_init_opp_table(cpu_dev);
 	} else {
 		np = of_node_get(cpu_dev->of_node);
 	}
-- 
1.7.5.4

