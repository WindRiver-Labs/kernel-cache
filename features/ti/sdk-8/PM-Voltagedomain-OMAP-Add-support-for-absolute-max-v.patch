From 8edcb6ed4e3790b614e1189754ff559ad097df88 Mon Sep 17 00:00:00 2001
From: "Menon, Nishanth" <nm@ti.com>
Date: Mon, 5 Jan 2015 19:16:40 +0000
Subject: [PATCH 1568/1587] PM / Voltagedomain: OMAP: Add support for absolute
 max voltage for a domain

We need to mark the voltage domain absolute maximum rating. This allows
us to setup voltage for a domain from min to max absolute rating.
Unfortunately, it is not possible to solely depend on maximum OPP
allowed for a domain due to the following:
in the case of a ganged voltage rail, where SMPS_x is shared between
VDD_A and VDD_B, setting voltage_tol for VDD_A can prevent VDD_B from
achieving voltage required for the domain. example:
vdd_A requires voltage Z, vdd_B requires voltage Y,
      setting Z-tol to Z + tol will not work when Y is > or < the range.
instead, we look for absolute max for the voltage domains A and B.
setting Z-tol to MAX_A and Y-tol to MAX_B allows voltage ranges which
fall in the intermediate ranges and work for both VDD_A and VDD_B even
if it may be suboptimal for one of them.

If the max range is not provided the mandatory tolerance is used.

Reported-by: Ravikumar Kattekola <rk@ti.com>
Signed-off-by: Nishanth Menon <nm@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 .../bindings/power/voltdm/voltdm_omap.txt          |    3 ++
 drivers/power/voltdm/voltdm_omap.c                 |   22 +++++++++++++++++--
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/Documentation/devicetree/bindings/power/voltdm/voltdm_omap.txt b/Documentation/devicetree/bindings/power/voltdm/voltdm_omap.txt
index cb1fb31..5b5a885 100644
--- a/Documentation/devicetree/bindings/power/voltdm/voltdm_omap.txt
+++ b/Documentation/devicetree/bindings/power/voltdm/voltdm_omap.txt
@@ -25,6 +25,9 @@ Required Properties:
 	volt: voltage in uV - reference voltage (OPP voltage)
 	efuse_offseet: efuse offset from reg where the optimized voltage is stored.
 
+Optional Properties:
+- ti,absolute-max-voltage-uv: absolute maximum voltage for the voltage domain.
+
 Example:
 voltage_domain_mpu: voltdm@1 {
 	compatible = "ti,omap-voltdm";
diff --git a/drivers/power/voltdm/voltdm_omap.c b/drivers/power/voltdm/voltdm_omap.c
index 339ec30..e69bb73 100644
--- a/drivers/power/voltdm/voltdm_omap.c
+++ b/drivers/power/voltdm/voltdm_omap.c
@@ -38,12 +38,14 @@ struct omap_voltdm_optimium_voltage_table {
  * @vbb_reg:	Body Bias regulator
  * @vdd_table:	Optimized voltage mapping table
  * @num_vdd_table: number of entries in vdd_table
+ * @vdd_absolute_max_voltage_uv: absolute maximum voltage in UV for the domain
  */
 struct omap_voltdm_data {
 	struct regulator *vdd_reg;
 	struct regulator *vbb_reg;
 	struct omap_voltdm_optimium_voltage_table *vdd_table;
 	u32 num_vdd_table;
+	u32 vdd_absolute_max_voltage_uv;
 };
 
 /**
@@ -157,6 +159,9 @@ static int voltdm_store_optimized_voltages(struct device *dev,
 		}
 	}
 
+	of_property_read_u32(dev->of_node, "ti,absolute-max-voltage-uv",
+				     &data->vdd_absolute_max_voltage_uv);
+
 out:
 	iounmap(base);
 out_map:
@@ -247,9 +252,20 @@ static int omap_voltdm_do_transition(struct device *dev,
 	}
 
 	vdd_uv = voltdm_get_optimal_vdd_voltage(dev, data, uv);
-	dev_dbg(dev, "vdd for voltage %duV(ref=%duV)[tol %duV]\n",
-		vdd_uv, uv, tol_uv);
-	ret = regulator_set_voltage_tol(data->vdd_reg, vdd_uv, tol_uv);
+	dev_dbg(dev, "vdd for voltage %duV(ref=%duV)[tol %duV] MAX=%duV\n",
+		vdd_uv, uv, tol_uv, data->vdd_absolute_max_voltage_uv);
+	if (data->vdd_absolute_max_voltage_uv) {
+		ret = regulator_set_voltage(data->vdd_reg,
+					    vdd_uv,
+					    data->vdd_absolute_max_voltage_uv);
+		/* Try a lower range */
+		if (ret)
+			ret = regulator_set_voltage(data->vdd_reg,
+					    vdd_uv - tol_uv,
+					    data->vdd_absolute_max_voltage_uv);
+	} else {
+		ret = regulator_set_voltage_tol(data->vdd_reg, vdd_uv, tol_uv);
+	}
 	if (ret) {
 		dev_err(dev,
 			"vdd failed for voltage %duV(ref=%duV)[tol %duV]:%d\n",
-- 
1.7.5.4

