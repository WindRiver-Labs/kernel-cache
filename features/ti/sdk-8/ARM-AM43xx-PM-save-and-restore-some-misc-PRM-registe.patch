From ca5bd7f5f3fb301eb857f0256571783eb083cec9 Mon Sep 17 00:00:00 2001
From: Tero Kristo <t-kristo@ti.com>
Date: Thu, 18 Sep 2014 13:50:53 +0300
Subject: [PATCH 1216/1587] ARM: AM43xx: PM: save and restore some misc PRM
 registers during rtc-only

Save/restore of these registers is needed so that certain features
like PRCM io-chain will still function properly after rtc-only mode.

Signed-off-by: Tero Kristo <t-kristo@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/pm33xx.c  |    3 ++
 arch/arm/mach-omap2/prm33xx.c |   60 +++++++++++++++++++++++++++++++++++++++++
 arch/arm/mach-omap2/prm33xx.h |    2 +
 3 files changed, 65 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 3b20b95..15a2851 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -46,6 +46,7 @@
 #include "pm.h"
 #include "cm33xx.h"
 #include "pm33xx.h"
+#include "prm33xx.h"
 #include "common.h"
 #include "clockdomain.h"
 #include "powerdomain.h"
@@ -190,12 +191,14 @@ static void am43xx_save_context(void)
 {
 	common_save_context();
 	am43xx_control_save_context();
+	am43xx_prm_save_context();
 }
 
 static void am43xx_restore_context(void)
 {
 	common_restore_context();
 	am43xx_control_restore_context();
+	am43xx_prm_restore_context();
 	am43xx_push_sram_idle();
 	/*
 	 * HACK: restore dpll_per_clkdcoldo register contents, to avoid
diff --git a/arch/arm/mach-omap2/prm33xx.c b/arch/arm/mach-omap2/prm33xx.c
index 3607136..40c4f7f 100644
--- a/arch/arm/mach-omap2/prm33xx.c
+++ b/arch/arm/mach-omap2/prm33xx.c
@@ -22,6 +22,7 @@
 #include "powerdomain.h"
 #include "prm33xx.h"
 #include "prm-regbits-33xx.h"
+#include "prcm43xx.h"
 
 /* Read a register in a PRM instance */
 u32 am33xx_prm_read_reg(s16 inst, u16 idx)
@@ -343,6 +344,65 @@ static void am33xx_pwrdm_restore_context(struct powerdomain *pwrdm)
 	am33xx_pwrdm_wait_transition(pwrdm);
 }
 
+struct prm_register {
+	s16 inst;
+	u16 offset;
+	u32 val;
+};
+
+static struct prm_register am43xx_prm_regs[] = {
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM33XX_PRM_SRAM_COUNT_OFFSET, },
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM33XX_PRM_LDO_SRAM_CORE_SETUP_OFFSET, },
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM33XX_PRM_LDO_SRAM_CORE_CTRL_OFFSET, },
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM33XX_PRM_LDO_SRAM_MPU_SETUP_OFFSET, },
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM33XX_PRM_LDO_SRAM_MPU_CTRL_OFFSET, },
+	{ .inst = AM43XX_PRM_DEVICE_INST,
+	  .offset = AM43XX_PRM_IO_PMCTRL_OFFSET, },
+	{ .inst = AM43XX_PRM_OCP_SOCKET_INST,
+	  .offset = AM43XX_PRM_IRQENABLE_MPU_OFFSET, },
+	{ .inst = -1 },
+};
+
+/**
+ * am43xx_prm_save_context - saves context of misc PRM registers
+ *
+ * Saves mist PRM registers before rtc-mode entry. Currently just saves
+ * PRM device/irq registers but should be expanded to cover all the PRM
+ * registers.
+ */
+void am43xx_prm_save_context(void)
+{
+	struct prm_register *reg = am43xx_prm_regs;
+
+	while (reg->inst >= 0) {
+		reg->val = am33xx_prm_read_reg(reg->inst, reg->offset);
+		reg++;
+	}
+}
+
+/**
+ * am43xx_prm_restore_context - restores context of misc PRM registers
+ *
+ *
+ * Restores misc PRM registers after rtc-mode entry. Currently just
+ * restores PRM device/irq registers but should be expanded to cover all the
+ * PRM registers.
+ */
+void am43xx_prm_restore_context(void)
+{
+	struct prm_register *reg = am43xx_prm_regs;
+
+	while (reg->inst >= 0) {
+		am33xx_prm_write_reg(reg->val, reg->inst, reg->offset);
+		reg++;
+	}
+}
+
 struct pwrdm_ops am33xx_pwrdm_operations = {
 	.pwrdm_set_next_pwrst		= am33xx_pwrdm_set_next_pwrst,
 	.pwrdm_read_next_pwrst		= am33xx_pwrdm_read_next_pwrst,
diff --git a/arch/arm/mach-omap2/prm33xx.h b/arch/arm/mach-omap2/prm33xx.h
index 9b9918d..95b9e95 100644
--- a/arch/arm/mach-omap2/prm33xx.h
+++ b/arch/arm/mach-omap2/prm33xx.h
@@ -127,5 +127,7 @@ extern int am33xx_prm_is_hardreset_asserted(u8 shift, s16 inst,
 extern int am33xx_prm_assert_hardreset(u8 shift, s16 inst, u16 rstctrl_offs);
 extern int am33xx_prm_deassert_hardreset(u8 shift, u8 st_shift, s16 inst,
 		u16 rstctrl_offs, u16 rstst_offs);
+void am43xx_prm_save_context(void);
+void am43xx_prm_restore_context(void);
 #endif /* ASSEMBLER */
 #endif
-- 
1.7.5.4

