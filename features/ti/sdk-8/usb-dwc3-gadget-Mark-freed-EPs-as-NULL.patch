From 41841c1a32c3773c5ea7afe78c4d8d8abd54480e Mon Sep 17 00:00:00 2001
From: George Cherian <george.cherian@ti.com>
Date: Tue, 16 Dec 2014 00:08:04 +0530
Subject: [PATCH 1555/1587] usb: dwc3: gadget: Mark freed EPs as NULL

The freed EPs should be marked as NULL else any further
access would cause issues. This was seen while testing suspend/resume
with DRD enabled. While at it, check for valid ep0 and ep1 during
suspend /resume.

ep0 and ep1 are freed while switching from host to device mode.
Now that we make it NULL after freeing check the validity during
suspend/resume.

Signed-off-by: George Cherian <george.cherian@ti.com>
[nsekhar@ti.com: minor tweaks to patch description]
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/usb/dwc3/gadget.c |   46 +++++++++++++++++++++++++-------------------
 1 files changed, 26 insertions(+), 20 deletions(-)

diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index 15d4b34..2eb6dc6 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -1830,6 +1830,7 @@ static void dwc3_gadget_free_endpoints(struct dwc3 *dwc)
 		}
 
 		kfree(dep);
+		dwc->eps[epnum] = NULL;
 	}
 }
 
@@ -2933,8 +2934,10 @@ int dwc3_gadget_suspend(struct dwc3 *dwc)
 		dwc->pullups_connected = true;
 	}
 
-	__dwc3_gadget_ep_disable(dwc->eps[0]);
-	__dwc3_gadget_ep_disable(dwc->eps[1]);
+	if (dwc->eps[0] && dwc->eps[1]) {
+		__dwc3_gadget_ep_disable(dwc->eps[0]);
+		__dwc3_gadget_ep_disable(dwc->eps[1]);
+	}
 
 	dwc->dcfg = dwc3_readl(dwc->regs, DWC3_DCFG);
 
@@ -2946,30 +2949,33 @@ int dwc3_gadget_resume(struct dwc3 *dwc)
 	struct dwc3_ep		*dep;
 	int			ret;
 
-	/* Start with SuperSpeed Default */
-	dwc3_gadget_ep0_desc.wMaxPacketSize = cpu_to_le16(512);
+	if (dwc->eps[0] && dwc->eps[1]) {
+		/* Start with SuperSpeed Default */
+		dwc3_gadget_ep0_desc.wMaxPacketSize = cpu_to_le16(512);
 
-	dep = dwc->eps[0];
-	ret = __dwc3_gadget_ep_enable(dep, &dwc3_gadget_ep0_desc, NULL, false);
-	if (ret)
-		goto err0;
+		dep = dwc->eps[0];
+		ret = __dwc3_gadget_ep_enable(dep, &dwc3_gadget_ep0_desc,
+					      NULL, false);
+		if (ret)
+			goto err0;
 
-	dep = dwc->eps[1];
-	ret = __dwc3_gadget_ep_enable(dep, &dwc3_gadget_ep0_desc, NULL, false);
-	if (ret)
-		goto err1;
+		dep = dwc->eps[1];
+		ret = __dwc3_gadget_ep_enable(dep, &dwc3_gadget_ep0_desc,
+					      NULL, false);
+		if (ret)
+			goto err1;
 
-	/* begin to receive SETUP packets */
-	dwc->ep0state = EP0_SETUP_PHASE;
-	dwc3_ep0_out_start(dwc);
+		/* begin to receive SETUP packets */
+		dwc->ep0state = EP0_SETUP_PHASE;
+		dwc3_ep0_out_start(dwc);
 
-	dwc3_writel(dwc->regs, DWC3_DCFG, dwc->dcfg);
+		dwc3_writel(dwc->regs, DWC3_DCFG, dwc->dcfg);
 
-	if (dwc->pullups_connected) {
-		dwc3_gadget_enable_irq(dwc);
-		dwc3_gadget_run_stop(dwc, true, false);
+		if (dwc->pullups_connected) {
+			dwc3_gadget_enable_irq(dwc);
+			dwc3_gadget_run_stop(dwc, true, false);
+		}
 	}
-
 	return 0;
 
 err1:
-- 
1.7.5.4

