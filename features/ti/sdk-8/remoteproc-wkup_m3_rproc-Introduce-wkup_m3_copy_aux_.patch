From 9cd5c5c938d0ec07051e4b14a748bc0741ab0b62 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Thu, 28 Aug 2014 14:18:49 -0500
Subject: [PATCH 1104/1587] remoteproc: wkup_m3_rproc: Introduce
 wkup_m3_copy_aux_data

Introduce wkup_m3_copy_aux_data to give users of wkup_m3_rproc the
ability to copy data to a predefined data region that can be accessed by
the firmware running on the CM3.

Aux Data region is defined as the last 255 bytes of the DMEM used by the
wkup_m3.

Useful for providing i2c sequences to the CM3 firmware for scaling PMIC
voltages during low power modes.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/remoteproc/wkup_m3_rproc.c |   26 ++++++++++++++++++++++++++
 include/linux/wkup_m3.h            |    3 +++
 2 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/drivers/remoteproc/wkup_m3_rproc.c b/drivers/remoteproc/wkup_m3_rproc.c
index bb241ff..81da3a5 100644
--- a/drivers/remoteproc/wkup_m3_rproc.c
+++ b/drivers/remoteproc/wkup_m3_rproc.c
@@ -50,6 +50,10 @@
 #define AM33XX_M3_TXEV_ACK		(0x1 << 0)
 #define AM33XX_M3_TXEV_ENABLE		(0x0 << 0)
 
+#define WKUP_M3_DMEM_START		0x80000
+#define WKUP_M3_AUXDATA_OFFSET		0xF00
+#define WKUP_M3_AUXDATA_SIZE		0xFF
+
 struct wkup_m3_rproc {
 	struct rproc *rproc;
 
@@ -218,6 +222,28 @@ static struct rproc_ops wkup_m3_rproc_ops = {
 /* Public Functions */
 
 /**
+ * wkup_m3_copy_aux_data - Copy auxillary data to special region of m3 dmem
+ * @data - pointer to data
+ * @sz - size of data to copy (limit 256 bytes)
+ *
+ * Copies any additional blob of data to the wkup_m3 dmem to be used by the
+ * firmware
+ */
+unsigned long wkup_m3_copy_aux_data(const void *data, int sz)
+{
+	unsigned long aux_data_dev_addr;
+	void *aux_data_addr;
+
+	aux_data_dev_addr = WKUP_M3_DMEM_START + WKUP_M3_AUXDATA_OFFSET;
+	aux_data_addr = rproc_da_to_va(m3_rproc_static->rproc,
+				       aux_data_dev_addr,
+				       WKUP_M3_AUXDATA_SIZE);
+	memcpy(aux_data_addr, data, sz);
+
+	return WKUP_M3_AUXDATA_OFFSET;
+}
+
+/**
  * wkup_m3_set_ops - Set callbacks for user of rproc
  * @ops - struct wkup_m3_ops *
  *
diff --git a/include/linux/wkup_m3.h b/include/linux/wkup_m3.h
index 0f8e0e2..48a7fcc 100644
--- a/include/linux/wkup_m3.h
+++ b/include/linux/wkup_m3.h
@@ -50,6 +50,7 @@ struct wkup_m3_ipc_regs {
 
 #ifdef CONFIG_WKUP_M3_RPROC
 int wkup_m3_prepare(void);
+unsigned long wkup_m3_copy_aux_data(const void *data, int sz);
 void wkup_m3_set_ops(struct wkup_m3_ops *ops);
 int wkup_m3_ping(void);
 void wkup_m3_wake_src(struct wkup_m3_wakeup_src *wakeup_src);
@@ -61,6 +62,8 @@ void wkup_m3_set_cmd(struct wkup_m3_ipc_regs *ipc_regs);
 #else
 
 static inline int wkup_m3_prepare(void) { return -EINVAL; }
+static inline
+unsigned long wkup_m3_copy_aux_data(void *data, int sz) { return -1; }
 static inline void wkup_m3_set_ops(struct wkup_m3_ops *ops) { }
 static inline int wkup_m3_ping(void) { return -EINVAL }
 static inline void wkup_m3_wake_src(struct wkup_m3_wakeup_src *wakeup_src) { }
-- 
1.7.5.4

