From 3596cf481e4815d7250840a892aeabe40d4704be Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Tue, 5 Aug 2014 19:06:01 -0500
Subject: [PATCH 1071/1587] ARM: OMAP2+: Add rproc pdata-quirks for IPUs &
 DSP1 on DRA7

The remote processors on DRA7xx requires similar device management
pdata-quirks (reset control, clocking, boot vector programming,
dmtimer API wrappers for enabling both system and watchdog timers)
as the IPU and DSP processors on OMAP4/OMAP5. All these pdata ops
are identical to the ones used on OMAP4/OMAP5 except for the boot
vector programming on DSPs on DRA7xx.

The pdata quirks for the most common remote processor subsystems
on DRA7xx - IPU1, IPU2 and the DSP1, have been added. The quirks
need to match the starting address in the auxdata for the respective
processors, as the same compatible string is used for all the
instances of the remote processor of the same type. The pdata
quirks will be removed once the dependencies against arch/arm
layers are resolved.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/pdata-quirks.c |   29 ++++++++++++++++++++++++-----
 1 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-omap2/pdata-quirks.c b/arch/arm/mach-omap2/pdata-quirks.c
index 9ce011e..088e86b 100644
--- a/arch/arm/mach-omap2/pdata-quirks.c
+++ b/arch/arm/mach-omap2/pdata-quirks.c
@@ -214,7 +214,8 @@ static void __init omap4_panda_legacy_init(void)
 }
 #endif
 
-#if defined(CONFIG_ARCH_OMAP4) || defined(CONFIG_SOC_OMAP5)
+#if defined(CONFIG_ARCH_OMAP4) || defined(CONFIG_SOC_OMAP5) || \
+	defined(CONFIG_SOC_DRA7XX)
 static struct omap_rproc_timer_ops omap_rproc_dmtimer_ops = {
 	.request_timer = omap_rproc_request_timer,
 	.release_timer = omap_rproc_release_timer,
@@ -224,12 +225,20 @@ static struct omap_rproc_timer_ops omap_rproc_dmtimer_ops = {
 	.ack_timer_irq = omap_rproc_ack_timer_irq,
 };
 
+static struct iommu_platform_data omap4_iommu_pdata = {
+	.reset_name = "mmu_cache",
+	.assert_reset = omap_device_assert_hardreset,
+	.deassert_reset = omap_device_deassert_hardreset,
+};
+
 static struct omap_rproc_pdata omap4_ipu_pdata = {
 	.device_enable = omap_rproc_device_enable,
 	.device_shutdown = omap_rproc_device_shutdown,
 	.timer_ops = &omap_rproc_dmtimer_ops,
 };
+#endif
 
+#if defined(CONFIG_ARCH_OMAP4) || defined(CONFIG_SOC_OMAP5)
 static struct omap_rproc_pdata omap4_dsp_pdata = {
 	.device_enable = omap_rproc_device_enable,
 	.device_shutdown = omap_rproc_device_shutdown,
@@ -237,10 +246,14 @@ static struct omap_rproc_pdata omap4_dsp_pdata = {
 	.timer_ops = &omap_rproc_dmtimer_ops,
 };
 
-static struct iommu_platform_data omap4_iommu_pdata = {
-	.reset_name = "mmu_cache",
-	.assert_reset = omap_device_assert_hardreset,
-	.deassert_reset = omap_device_deassert_hardreset,
+#endif
+
+#ifdef CONFIG_SOC_DRA7XX
+static struct omap_rproc_pdata dra7_dsp1_pdata = {
+	.device_enable = omap_rproc_device_enable,
+	.device_shutdown = omap_rproc_device_shutdown,
+	.set_bootaddr = dra7_ctrl_write_dsp1_boot_addr,
+	.timer_ops = &omap_rproc_dmtimer_ops,
 };
 #endif
 
@@ -356,6 +369,12 @@ struct of_dev_auxdata omap_auxdata_lookup[] __initdata = {
 		       &omap4_iommu_pdata),
 	OF_DEV_AUXDATA("ti,dra7-iommu", 0x58882000, "58882000.mmu",
 		       &omap4_iommu_pdata),
+	OF_DEV_AUXDATA("ti,dra7-rproc-ipu", 0x55020000, "55020000.ipu",
+		       &omap4_ipu_pdata),
+	OF_DEV_AUXDATA("ti,dra7-rproc-ipu", 0x58820000, "58820000.ipu",
+		       &omap4_ipu_pdata),
+	OF_DEV_AUXDATA("ti,dra7-rproc-dsp", 0x40800000, "40800000.dsp",
+		       &dra7_dsp1_pdata),
 #endif
 	{ /* sentinel */ },
 };
-- 
1.7.5.4

