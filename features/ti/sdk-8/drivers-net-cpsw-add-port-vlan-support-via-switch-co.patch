From 7a8eb014887ea8c6e9df603692764acbc2a9e26f Mon Sep 17 00:00:00 2001
From: Mugunthan V N <mugunthanvnm@ti.com>
Date: Thu, 11 Dec 2014 13:50:35 +0530
Subject: [PATCH 1525/1587] drivers; net: cpsw: add port vlan support via
 switch config ioctl

Add port vlan support via switch config ioctl to configure port vlan
in the ports to add desired vlan to the packet when an untagged VLAN
packet arrives at the port.

Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/net/ethernet/ti/cpsw.c         |   73 ++++++++++++++++++++++++++++++++
 include/uapi/linux/net_switch_config.h |    4 ++
 2 files changed, 77 insertions(+), 0 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index a943501..bbab3f6 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -1765,6 +1765,79 @@ static int cpsw_switch_config_ioctl(struct net_device *ndev,
 			ret = -EINVAL;
 		}
 		break;
+	case CONFIG_SWITCH_GET_PORT_VLAN_CONFIG:
+	{
+		u32 __iomem *port_vlan_reg;
+		u32 port_vlan;
+
+		switch (config.port) {
+		case 0:
+			port_vlan_reg = &priv->host_port_regs->port_vlan;
+			port_vlan = readl(port_vlan_reg);
+			break;
+		case 1:
+		case 2:
+		{
+			int slave = config.port - 1;
+			if (priv->version == CPSW_VERSION_1) {
+				port_vlan = slave_read(priv->slaves + slave,
+						       CPSW1_PORT_VLAN);
+			} else {
+				port_vlan = slave_read(priv->slaves + slave,
+						       CPSW2_PORT_VLAN);
+			}
+			break;
+		}
+		default:
+			dev_err(priv->dev, "Invalid Arguments\n");
+			ret = -EINVAL;
+			break;
+		}
+
+		if (!ret) {
+			config.vid = port_vlan & 0xfff;
+			config.vlan_cfi = port_vlan & BIT(12) ? true : false;
+			config.prio = (port_vlan >> 13) & 0x7;
+			ret = copy_to_user(ifrq->ifr_data, &config,
+					   sizeof(config));
+		}
+		break;
+	}
+	case CONFIG_SWITCH_SET_PORT_VLAN_CONFIG:
+	{
+		void __iomem *port_vlan_reg;
+		u32 port_vlan;
+
+		port_vlan = config.vid;
+		port_vlan |= config.vlan_cfi ? BIT(12) : 0;
+		port_vlan |= (config.prio & 0x7) << 13;
+
+		switch (config.port) {
+		case 0:
+			port_vlan_reg = &priv->host_port_regs->port_vlan;
+			writel(port_vlan, port_vlan_reg);
+			break;
+		case 1:
+		case 2:
+		{
+			int slave = config.port - 1;
+			if (priv->version == CPSW_VERSION_1) {
+				slave_write(priv->slaves + slave, port_vlan,
+					    CPSW1_PORT_VLAN);
+			} else {
+				slave_write(priv->slaves + slave, port_vlan,
+					    CPSW2_PORT_VLAN);
+			}
+			break;
+		}
+		default:
+			dev_err(priv->dev, "Invalid Arguments\n");
+			ret = -EINVAL;
+			break;
+		}
+
+		break;
+	}
 
 	default:
 		ret = -EOPNOTSUPP;
diff --git a/include/uapi/linux/net_switch_config.h b/include/uapi/linux/net_switch_config.h
index 149fcdc..f9f07f1 100644
--- a/include/uapi/linux/net_switch_config.h
+++ b/include/uapi/linux/net_switch_config.h
@@ -31,6 +31,8 @@ enum {
 	CONFIG_SWITCH_ADD_UNKNOWN_VLAN_INFO,
 	CONFIG_SWITCH_GET_PORT_STATE,
 	CONFIG_SWITCH_SET_PORT_STATE,
+	CONFIG_SWITCH_GET_PORT_VLAN_CONFIG,
+	CONFIG_SWITCH_SET_PORT_VLAN_CONFIG,
 };
 
 enum {
@@ -55,6 +57,8 @@ struct net_switch_config {
 	unsigned int	unknown_vlan_unreg_multi;
 	unsigned int	unknown_vlan_reg_multi;
 	unsigned int	port_state;
+	unsigned int	prio;
+	bool		vlan_cfi;
 	struct ethtool_cmd ecmd;
 
 	unsigned int ret_type;   /* Return  Success/Failure */
-- 
1.7.5.4

