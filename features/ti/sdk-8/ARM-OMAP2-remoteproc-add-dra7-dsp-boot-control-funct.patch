From 30704ed1322756de422ec664eda779b461a11aad Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Wed, 6 Aug 2014 18:35:44 -0500
Subject: [PATCH 1069/1587] ARM: OMAP2+: remoteproc: add dra7 dsp boot control
 functions

DRA7xx has upto two instances of DSP processors, and each DSP needs
its boot vector to be programmed in a Control module register. The
Control module API is currently limited only to the machine layers,
and the OMAP remoteproc driver programs the DSP Boot vectors using
a specific platform ops function.

The format of this boot control register is different from earlier
OMAP2+ SoCs, and is programmed by the dra7_dsp_ctrl_write_boot_addr()
function. Add the proper pdata ops implementation wrappers over this
function for properly writing the boot vector for each of the DSPs
in DRA7xx, so that they can be supplied to the OMAP remoteproc driver
through the respective platform data and pdata quirks.

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/remoteproc.c |   11 +++++++++++
 arch/arm/mach-omap2/remoteproc.h |    4 ++++
 2 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/remoteproc.c b/arch/arm/mach-omap2/remoteproc.c
index c78f4ca..9e91ef0 100644
--- a/arch/arm/mach-omap2/remoteproc.c
+++ b/arch/arm/mach-omap2/remoteproc.c
@@ -20,8 +20,19 @@
 #include <plat/dmtimer.h>
 
 #include "omap_device.h"
+#include "control.h"
 #include "remoteproc.h"
 
+void dra7_ctrl_write_dsp1_boot_addr(u32 bootaddr)
+{
+	dra7_ctrl_write_dsp_boot_addr(bootaddr, 0);
+}
+
+void dra7_ctrl_write_dsp2_boot_addr(u32 bootaddr)
+{
+	dra7_ctrl_write_dsp_boot_addr(bootaddr, 1);
+}
+
 /**
  * omap_rproc_device_enable - enable the remoteproc device
  * @pdev: the rproc platform device
diff --git a/arch/arm/mach-omap2/remoteproc.h b/arch/arm/mach-omap2/remoteproc.h
index 2e88a0f..43a5658 100644
--- a/arch/arm/mach-omap2/remoteproc.h
+++ b/arch/arm/mach-omap2/remoteproc.h
@@ -22,6 +22,8 @@
 struct omap_dm_timer;
 
 #if IS_ENABLED(CONFIG_OMAP_REMOTEPROC)
+void dra7_ctrl_write_dsp1_boot_addr(u32 bootaddr);
+void dra7_ctrl_write_dsp2_boot_addr(u32 bootaddr);
 int omap_rproc_device_enable(struct platform_device *pdev);
 int omap_rproc_device_shutdown(struct platform_device *pdev);
 struct omap_dm_timer *omap_rproc_request_timer(struct device_node *np);
@@ -31,6 +33,8 @@ int omap_rproc_stop_timer(struct omap_dm_timer *timer);
 int omap_rproc_get_timer_irq(struct omap_dm_timer *timer);
 void omap_rproc_ack_timer_irq(struct omap_dm_timer *timer);
 #else
+static inline void dra7_ctrl_write_dsp1_boot_addr(u32 bootaddr) { }
+static inline void dra7_ctrl_write_dsp2_boot_addr(u32 bootaddr) { }
 static inline int omap_rproc_device_enable(struct platform_device *pdev)
 {
 	return 0;
-- 
1.7.5.4

