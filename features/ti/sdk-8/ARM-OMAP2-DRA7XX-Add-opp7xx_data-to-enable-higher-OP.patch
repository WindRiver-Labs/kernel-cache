From 694707dbb644247790cf79775b92ed1f17aba355 Mon Sep 17 00:00:00 2001
From: Dave Gerlach <d-gerlach@ti.com>
Date: Tue, 15 Jul 2014 11:12:44 -0500
Subject: [PATCH 0848/1587] ARM: OMAP2+: DRA7XX: Add opp7xx_data to enable
 higher OPPs

Certain OPPs on DRA7XX are not available for all variants. The available
OPPs can be determined by reading a die_id register. This patch
reads the register and enables the appropriate OPPs.

OPP Information from DRA7x Data Manual, SPRS857K, Revised July 2014.

efuse decoded using VayuSpeedGrades.xlsx document, version 0.2, revised
May 30, 2014.

Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/Makefile      |    1 +
 arch/arm/mach-omap2/io.c          |    1 +
 arch/arm/mach-omap2/opp7xx_data.c |   94 +++++++++++++++++++++++++++++++++++++
 arch/arm/mach-omap2/pm.h          |    5 ++
 4 files changed, 101 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-omap2/opp7xx_data.c

diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index feb4a59..5906d8e 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -80,6 +80,7 @@ obj-$(CONFIG_ARCH_OMAP3)		+= opp3xxx_data.o
 obj-$(CONFIG_SOC_AM33XX)		+= opp33xx_data.o
 obj-$(CONFIG_SOC_AM43XX)		+= opp43xx_data.o
 obj-$(CONFIG_ARCH_OMAP4)		+= opp4xxx_data.o
+obj-$(CONFIG_SOC_DRA7XX)		+= opp7xx_data.o
 endif
 
 # Power Management
diff --git a/arch/arm/mach-omap2/io.c b/arch/arm/mach-omap2/io.c
index df48b8c..d58bb0d 100644
--- a/arch/arm/mach-omap2/io.c
+++ b/arch/arm/mach-omap2/io.c
@@ -706,6 +706,7 @@ void __init dra7xx_init_early(void)
 
 void __init dra7xx_init_late(void)
 {
+	dra7xx_opp_init();
 	omap_common_late_init();
 }
 #endif
diff --git a/arch/arm/mach-omap2/opp7xx_data.c b/arch/arm/mach-omap2/opp7xx_data.c
new file mode 100644
index 0000000..42bf3ff
--- /dev/null
+++ b/arch/arm/mach-omap2/opp7xx_data.c
@@ -0,0 +1,94 @@
+/*
+ * DRA7XX OPP table definitions.
+ *
+ * Copyright (C) 2014 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed "as is" WITHOUT ANY WARRANTY of any
+ * kind, whether express or implied; without even the implied warranty
+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+#include <linux/io.h>
+#include <linux/module.h>
+
+#include "control.h"
+#include "omap_opp_data.h"
+#include "pm.h"
+#include "soc.h"
+
+/* From DRA7x TRM, SPRUHI2Q */
+#define DRA7XX_STD_FUSE_DIE_ID_2		0x4AE0C20C
+
+#define SPEED_VAL_MASK				(0x1F << 19)
+#define SPEED_VAL_SHFT				19
+
+/*
+ * These values indicate the highest available OPP so if the value
+ * is found we want that OPP and all below it
+ */
+#define EFUSE_HAS_OD_MPU_OPP		11
+#define EFUSE_HAS_HIGH_MPU_OPP		15
+
+/*
+ * We only include OPP_OD and OPP_HIGH here, OPP_NOM is common to all
+ * variants and left to be supplied by DT.
+ */
+static struct omap_opp_def dra7xx_es1_0_opp_list[] __initdata = {
+	/* MPU OPP - OPP_OD */
+	OPP_INITIALIZER("mpu", false, 1176000000, 1160000),
+	/* MPU OPP - OPP_HIGH */
+	OPP_INITIALIZER("mpu", false, 1500000000, 1210000),
+};
+
+/**
+ * dra7xx_opp_init() - initialize dra7xx opp table
+ */
+int __init dra7xx_opp_init(void)
+{
+	int r = -ENODEV;
+	u32 rev, val, max_freq;
+	void __iomem *speed_reg_addr;
+
+	if (WARN(!soc_is_dra7xx(), "Cannot init OPPs: unsupported SoC.\n"))
+		return r;
+
+	speed_reg_addr = ioremap(DRA7XX_STD_FUSE_DIE_ID_2, SZ_1);
+
+	rev = omap_rev();
+
+	switch (rev) {
+	case DRA752_REV_ES1_0:
+	case DRA752_REV_ES1_1:
+	case DRA722_REV_ES1_0:
+	default:
+		/*
+		 * First read speed reg to detect supported frequency
+		 */
+		val = readl(speed_reg_addr);
+
+		max_freq = val & SPEED_VAL_MASK;
+		max_freq >>= SPEED_VAL_SHFT;
+
+		switch (max_freq) {
+		case EFUSE_HAS_HIGH_MPU_OPP:
+			opp_def_list_enable_opp(dra7xx_es1_0_opp_list,
+				ARRAY_SIZE(dra7xx_es1_0_opp_list),
+				"mpu", 1500000000, true);
+		/* FALLTHROUGH */
+		case EFUSE_HAS_OD_MPU_OPP:
+			opp_def_list_enable_opp(dra7xx_es1_0_opp_list,
+				ARRAY_SIZE(dra7xx_es1_0_opp_list),
+				"mpu", 1176000000, true);
+		};
+
+		r = omap_init_opp_table(dra7xx_es1_0_opp_list,
+					ARRAY_SIZE(dra7xx_es1_0_opp_list));
+		break;
+	}
+
+	return r;
+}
diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 0a4a011..b0e1e0f 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -40,6 +40,7 @@ extern int omap3_opp_init(void);
 extern int omap4_opp_init(void);
 extern int am33xx_opp_init(void);
 extern int am43xx_opp_init(void);
+extern int dra7xx_opp_init(void);
 #else
 static inline int omap3_opp_init(void)
 {
@@ -57,6 +58,10 @@ static inline int am43xx_opp_init(void)
 {
 	return -EINVAL;
 }
+static inline int dra7xx_opp_init(void)
+{
+	return -EINVAL;
+}
 #endif
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
-- 
1.7.5.4

