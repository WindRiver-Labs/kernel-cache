From 64aa92a4d7b8658824bf5d4cd4be83376ff4a952 Mon Sep 17 00:00:00 2001
From: George Cherian <george.cherian@ti.com>
Date: Tue, 16 Dec 2014 00:08:02 +0530
Subject: [PATCH 1553/1587] usb: dwc3: Save/Restore OTG registers while
 suspend/resume

With DRD enabled, OTG registers can lose context during suspend
resume. Save the registers during suspend and restore them
while resuming.

Signed-off-by: George Cherian <george.cherian@ti.com>
[nsekhar@ti.com: minor tweaks to patch description]
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/usb/dwc3/core.c |    6 ++++--
 drivers/usb/dwc3/core.h |   11 +++++++++++
 drivers/usb/dwc3/otg.c  |   18 ++++++++++++++++++
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index ce15da4..717ff4e 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -845,8 +845,9 @@ static int dwc3_suspend(struct device *dev)
 	spin_lock_irqsave(&dwc->lock, flags);
 
 	switch (dwc->dr_mode) {
-	case USB_DR_MODE_PERIPHERAL:
 	case USB_DR_MODE_OTG:
+		dwc3_otg_suspend(dwc);
+	case USB_DR_MODE_PERIPHERAL:
 		dwc3_gadget_suspend(dwc);
 		/* FALLTHROUGH */
 	case USB_DR_MODE_HOST:
@@ -888,8 +889,9 @@ static int dwc3_resume(struct device *dev)
 	dwc3_event_buffers_setup(dwc);
 
 	switch (dwc->dr_mode) {
-	case USB_DR_MODE_PERIPHERAL:
 	case USB_DR_MODE_OTG:
+		dwc3_otg_resume(dwc);
+	case USB_DR_MODE_PERIPHERAL:
 		dwc3_gadget_resume(dwc);
 		/* FALLTHROUGH */
 	case USB_DR_MODE_HOST:
diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index 00c48aa..e5b2a4f 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -772,6 +772,11 @@ struct dwc3 {
 	/* used for suspend/resume */
 	u32			dcfg;
 	u32			gctl;
+	u32			ocfg;
+	u32			octl;
+	u32			oevt;
+	u32			oevten;
+	u32			osts;
 
 	u32			nr_scratch;
 	u32			num_event_buffers;
@@ -1029,11 +1034,17 @@ static inline int dwc3_send_gadget_generic_command(struct dwc3 *dwc,
 #if IS_ENABLED(CONFIG_USB_DWC3_DUAL_ROLE)
 int dwc3_otg_init(struct dwc3 *dwc);
 void dwc3_otg_exit(struct dwc3 *dwc);
+void dwc3_otg_suspend(struct dwc3 *dwc);
+void dwc3_otg_resume(struct dwc3 *dwc);
 #else
 static inline int dwc3_otg_init(struct dwc3 *dwc)
 { return 0; }
 static inline void dwc3_otg_exit(struct dwc3 *dwc)
 { }
+static inline void dwc3_otg_suspend(struct dwc3 *dwc)
+{ }
+static inline void dwc3_otg_resume(struct dwc3 *dwc)
+{ }
 #endif
 
 /* power management interface */
diff --git a/drivers/usb/dwc3/otg.c b/drivers/usb/dwc3/otg.c
index b5c31c0..b0dc7b2 100644
--- a/drivers/usb/dwc3/otg.c
+++ b/drivers/usb/dwc3/otg.c
@@ -124,3 +124,21 @@ int dwc3_otg_init(struct dwc3 *dwc)
 
 	return 0;
 }
+
+void dwc3_otg_suspend(struct dwc3 *dwc)
+{
+	dwc->ocfg = dwc3_readl(dwc->regs, DWC3_OCFG);
+	dwc->octl = dwc3_readl(dwc->regs, DWC3_OCTL);
+	dwc->oevt = dwc3_readl(dwc->regs, DWC3_OEVT);
+	dwc->oevten = dwc3_readl(dwc->regs, DWC3_OEVTEN);
+	dwc->osts = dwc3_readl(dwc->regs, DWC3_OSTS);
+}
+
+void dwc3_otg_resume(struct dwc3 *dwc)
+{
+	dwc3_writel(dwc->regs, DWC3_OCFG, dwc->ocfg);
+	dwc3_writel(dwc->regs, DWC3_OCTL, dwc->octl);
+	dwc3_writel(dwc->regs, DWC3_OEVT, dwc->oevt);
+	dwc3_writel(dwc->regs, DWC3_OEVTEN, dwc->oevten);
+	dwc3_writel(dwc->regs, DWC3_OSTS, dwc->osts);
+}
-- 
1.7.5.4

