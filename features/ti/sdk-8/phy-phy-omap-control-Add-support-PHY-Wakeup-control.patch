From 248b12263fa06f46ce944b9549c7e4dfbaed5e2f Mon Sep 17 00:00:00 2001
From: George Cherian <george.cherian@ti.com>
Date: Wed, 3 Sep 2014 18:06:48 +0530
Subject: [PATCH 1174/1587] phy: phy-omap-control: Add support PHY Wakeup
 control

Add support to enable and disable the PHY wakeup feature
on AM43x. This is used to support the USB remote wakeup
feature in AM43x SoC.

Signed-off-by: George Cherian <george.cherian@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/phy/phy-omap-control.c       |   39 ++++++++++++++++++++++++++++++++++
 include/linux/phy/omap_control_phy.h |    7 ++++++
 2 files changed, 46 insertions(+), 0 deletions(-)

diff --git a/drivers/phy/phy-omap-control.c b/drivers/phy/phy-omap-control.c
index 9487bf1..55acbb8 100644
--- a/drivers/phy/phy-omap-control.c
+++ b/drivers/phy/phy-omap-control.c
@@ -146,6 +146,45 @@ void omap_control_phy_power(struct device *dev, int on)
 EXPORT_SYMBOL_GPL(omap_control_phy_power);
 
 /**
+ * omap_control_phy_wkup - PHY wkup on/off the phy using control module reg
+ * @dev: the control module device
+ * @on: 0 or 1, based on enable phy wakeup or disable phy wakeup
+ */
+int omap_control_phy_wkup(struct device *dev, int on)
+{
+	u32 val;
+	struct omap_control_phy	*control_phy;
+
+	if (IS_ERR(dev) || !dev) {
+		pr_err("%s: invalid device\n", __func__);
+		return -EINVAL;
+	}
+
+	control_phy = dev_get_drvdata(dev);
+	if (!control_phy) {
+		dev_dbg(dev, "%s: invalid control phy device\n", __func__);
+		return -ENODEV;
+	}
+
+	val = readl(control_phy->power);
+
+	if (control_phy->type != OMAP_CTRL_TYPE_AM437USB2) {
+		dev_dbg(dev, "%s: type %d not recognized\n",
+			__func__, control_phy->type);
+		return -EINVAL;
+	}
+
+	if (on)
+		val |= AM437X_CTRL_USB2_WKUP_EN;
+	else
+		val &= ~(AM437X_CTRL_USB2_WKUP_EN);
+
+	writel(val, control_phy->power);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(omap_control_phy_wkup);
+/**
  * omap_control_usb_host_mode - set AVALID, VBUSVALID and ID pin in grounded
  * @ctrl_phy: struct omap_control_phy *
  *
diff --git a/include/linux/phy/omap_control_phy.h b/include/linux/phy/omap_control_phy.h
index e9e6cfb..32b0fb0 100644
--- a/include/linux/phy/omap_control_phy.h
+++ b/include/linux/phy/omap_control_phy.h
@@ -74,9 +74,11 @@ enum omap_control_usb_mode {
 #define AM437X_CTRL_USB2_OTG_PD		BIT(1)
 #define AM437X_CTRL_USB2_OTGVDET_EN	BIT(19)
 #define AM437X_CTRL_USB2_OTGSESSEND_EN	BIT(20)
+#define AM437X_CTRL_USB2_WKUP_EN	BIT(21)
 
 #if IS_ENABLED(CONFIG_OMAP_CONTROL_PHY)
 void omap_control_phy_power(struct device *dev, int on);
+int omap_control_phy_wkup(struct device *dev, int on);
 void omap_control_usb_set_mode(struct device *dev,
 			       enum omap_control_usb_mode mode);
 void omap_control_pcie_pcs(struct device *dev, u8 id, u8 delay);
@@ -86,6 +88,11 @@ static inline void omap_control_phy_power(struct device *dev, int on)
 {
 }
 
+static inline int omap_control_phy_wkup(struct device *dev, int on)
+{
+	return 0;
+}
+
 static inline void omap_control_usb_set_mode(struct device *dev,
 	enum omap_control_usb_mode mode)
 {
-- 
1.7.5.4

