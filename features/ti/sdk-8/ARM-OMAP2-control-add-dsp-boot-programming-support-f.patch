From 960fa91095fde68a590f22002a495af0bfae9968 Mon Sep 17 00:00:00 2001
From: Suman Anna <s-anna@ti.com>
Date: Tue, 16 Jul 2013 13:58:58 -0500
Subject: [PATCH 1068/1587] ARM: OMAP2+: control: add dsp boot programming
 support for DRA7xx

DRA7xx has upto two instances of DSP processors, each with its own
boot control register. The format of the boot register is also
different from the earlier OMAP2+ SoCs. Support for this is added
by adding a new dra7_dsp_ctrl_write_boot_addr() function and reusing
it for omap_dsp_ctrl_write_boot_addr().

Signed-off-by: Suman Anna <s-anna@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 arch/arm/mach-omap2/control.c |   29 ++++++++++++++++++++++++++++-
 arch/arm/mach-omap2/control.h |    6 ++++++
 2 files changed, 34 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-omap2/control.c b/arch/arm/mach-omap2/control.c
index a243148..220ca2f 100644
--- a/arch/arm/mach-omap2/control.c
+++ b/arch/arm/mach-omap2/control.c
@@ -236,10 +236,29 @@ void omap3_ctrl_write_boot_mode(u8 bootmode)
  */
 void omap_ctrl_write_dsp_boot_addr(u32 bootaddr)
 {
+	dra7_ctrl_write_dsp_boot_addr(bootaddr, 0);
+}
+
+/**
+ * dra7_ctrl_write_dsp_boot_addr - set boot address for a dsp remote processor
+ * @bootaddr: physical address of the boot loader
+ * @inst: instance index of the DSP (applicable only for DRA7xx)
+ *
+ * Set boot address for the boot loader of a supported processor
+ * when a power ON sequence occurs.
+ *
+ * DRA7xx has different register bitfields compared to previous OMAP
+ * generations, retain the number of DSP instances while configuring
+ * the reset vector address.
+ */
+void dra7_ctrl_write_dsp_boot_addr(u32 bootaddr, u32 inst)
+{
+	u32 addr = bootaddr;
 	u32 offset = cpu_is_omap243x() ? OMAP243X_CONTROL_IVA2_BOOTADDR :
 		     cpu_is_omap34xx() ? OMAP343X_CONTROL_IVA2_BOOTADDR :
 		     cpu_is_omap44xx() ? OMAP4_CTRL_MODULE_CORE_DSP_BOOTADDR :
 		     soc_is_omap54xx() ? OMAP4_CTRL_MODULE_CORE_DSP_BOOTADDR :
+		     soc_is_dra7xx() ? DRA7XX_CTRL_CORE_CONTROL_DSP1_RST_VECT :
 		     0;
 
 	if (!offset) {
@@ -247,7 +266,15 @@ void omap_ctrl_write_dsp_boot_addr(u32 bootaddr)
 		return;
 	}
 
-	omap_ctrl_writel(bootaddr, offset);
+	if (soc_is_dra7xx()) {
+		if (inst)
+			offset += 0x4;
+		addr = omap_ctrl_readl(offset);
+		addr &= ~DRA7XX_CTRL_CORE_DSP_RST_VECT_MASK;
+		addr |= (bootaddr >> DRA7XX_CTRL_CORE_DSP_RST_VECT_SHIFT);
+	}
+
+	omap_ctrl_writel(addr, offset);
 }
 
 /**
diff --git a/arch/arm/mach-omap2/control.h b/arch/arm/mach-omap2/control.h
index 657006d..af6f402 100644
--- a/arch/arm/mach-omap2/control.h
+++ b/arch/arm/mach-omap2/control.h
@@ -258,6 +258,11 @@
 #define OMAP5XXX_CONTROL_STATUS                0x134
 #define OMAP5_DEVICETYPE_MASK          (0x7 << 6)
 
+/* DRA7XX DSP Reset Vector boot register */
+#define DRA7XX_CTRL_CORE_CONTROL_DSP1_RST_VECT	0x55C
+#define DRA7XX_CTRL_CORE_DSP_RST_VECT_MASK	(0x3FFFFF << 0)
+#define DRA7XX_CTRL_CORE_DSP_RST_VECT_SHIFT	10
+
 /*
  * REVISIT: This list of registers is not comprehensive - there are more
  * that should be added.
@@ -428,6 +433,7 @@ extern void omap3_control_restore_context(void);
 extern void omap3_ctrl_write_boot_mode(u8 bootmode);
 extern void omap_ctrl_write_dsp_boot_addr(u32 bootaddr);
 extern void omap_ctrl_write_dsp_boot_mode(u8 bootmode);
+extern void dra7_ctrl_write_dsp_boot_addr(u32 bootaddr, u32 inst);
 extern void omap3630_ctrl_disable_rta(void);
 extern int omap3_ctrl_save_padconf(void);
 extern void omap3_ctrl_set_iva_bootmode_idle(void);
-- 
1.7.5.4

