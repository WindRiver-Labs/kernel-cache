From 86ff69bfad38615f5280b3e3598789b361455e31 Mon Sep 17 00:00:00 2001
From: "Hebbar, Gururaja" <gururaja.hebbar@ti.com>
Date: Mon, 28 Jul 2014 19:35:51 -0500
Subject: [PATCH 0925/1587] mmc: omap_hsmmc: enhance pinctrl support

Update omap_hsmmc driver to set the state of the pins to:
- "default" on resume
- "sleep" on suspend

This should make it possible to optimize energy usage for the pins both
for the suspend/resume cycle, and for runtime cases in-between mmc
transfers.

By optionally putting the pins into sleep state in the suspend callback
we can accomplish two things.
- minimize current leakage from pins and thus save power,
- prevent the IP from driving pins output in an uncontrolled manner,
which may happen if the power domain drops the domain regulator.

Signed-off-by: Hebbar, Gururaja <gururaja.hebbar@ti.com>
Signed-off-by: Balaji T K <balajitk@ti.com>
Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
Signed-off-by: Sekhar Nori <nsekhar@ti.com>
[zou: Original patch taken from
ti-sdk-am335x-evm-08.00.00.00-Linux-x86-Install.bin]
Signed-off-by: Cao Zou <cao.zou@windriver.com>
---
 drivers/mmc/host/omap_hsmmc.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 8b23465..26f657d 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -2185,6 +2185,10 @@ static int omap_hsmmc_suspend(struct device *dev)
 		clk_disable_unprepare(host->dbclk);
 
 	pm_runtime_put_sync(host->dev);
+
+	/* Select sleep pin state */
+	pinctrl_pm_select_sleep_state(host->dev);
+
 	return 0;
 }
 
@@ -2196,6 +2200,9 @@ static int omap_hsmmc_resume(struct device *dev)
 	if (!host)
 		return 0;
 
+	/* Select default pin state */
+	pinctrl_pm_select_default_state(host->dev);
+
 	pm_runtime_get_sync(host->dev);
 
 	if (host->dbclk)
@@ -2226,6 +2233,9 @@ static int omap_hsmmc_runtime_suspend(struct device *dev)
 	omap_hsmmc_context_save(host);
 	dev_dbg(dev, "disabled\n");
 
+	/* Optionally let pins go into sleep state */
+	pinctrl_pm_select_sleep_state(host->dev);
+
 	return 0;
 }
 
@@ -2234,6 +2244,10 @@ static int omap_hsmmc_runtime_resume(struct device *dev)
 	struct omap_hsmmc_host *host;
 
 	host = platform_get_drvdata(to_platform_device(dev));
+
+	/* go to the default state */
+	pinctrl_pm_select_default_state(host->dev);
+
 	omap_hsmmc_context_restore(host);
 	dev_dbg(dev, "enabled\n");
 
-- 
1.7.5.4

